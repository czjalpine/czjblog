<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xinyao_idiot.gitee.io/zxy</id>
    <title>失心耀的博客 • Posts by &#34;nginx&#34; category</title>
    <link href="https://xinyao_idiot.gitee.io/zxy" />
    <updated>2021-04-02T08:30:03.000Z</updated>
    <category term="ElasticSearch" />
    <category term="Hexo" />
    <category term="Java" />
    <category term="SpringCloud" />
    <category term="Springboot" />
    <category term="驾照" />
    <category term="Git" />
    <category term="Nginx" />
    <category term="数据库系统原理" />
    <category term="linux" />
    <category term="RabbitMQ" />
    <category term="操作系统概论" />
    <category term="SpringBoot" />
    <category term="Redis" />
    <category term="中国近代史" />
    <entry>
        <id>https://xinyao_idiot.gitee.io/zxy/nginx/</id>
        <title>Nginx初步学习</title>
        <link rel="alternate" href="https://xinyao_idiot.gitee.io/zxy/nginx/"/>
        <content type="html">&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h1 id=&#34;nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx&#34;&gt;#&lt;/a&gt; nginx&lt;/h1&gt;
&lt;p&gt;推荐视频：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXpKNDExdzdTVj9wPTE=&#34;&gt;尚硅谷 Nginx&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;内容概览&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内容概览&#34;&gt;#&lt;/a&gt; 内容概览&lt;/h1&gt;
&lt;h2 id=&#34;1-nginx-简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-nginx-简介&#34;&gt;#&lt;/a&gt; 1、nginx 简介&lt;/h2&gt;
&lt;p&gt;（1）介绍 nginx 的应用场景和具体可以做什么事情&lt;/p&gt;
&lt;p&gt;（2）介绍什么是反向代理&lt;/p&gt;
&lt;p&gt;（3）介绍什么是负载均衡&lt;/p&gt;
&lt;p&gt;（4）介绍什么是动静分离&lt;/p&gt;
&lt;h2 id=&#34;2-nginx-安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-nginx-安装&#34;&gt;#&lt;/a&gt; 2、nginx 安装&lt;/h2&gt;
&lt;p&gt;（1）介绍 nginx 在 linux 系统中如何进行安装&lt;/p&gt;
&lt;h2 id=&#34;3-nginx-常用的命令和配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-nginx-常用的命令和配置文件&#34;&gt;#&lt;/a&gt; 3、nginx 常用的命令和配置文件&lt;/h2&gt;
&lt;p&gt;（1）介绍 nginx 启动、关闭、重新加载命令&lt;/p&gt;
&lt;p&gt;（2）介绍 nginx 的配置文件&lt;/p&gt;
&lt;h2 id=&#34;4-nginx-配置实例-反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-nginx-配置实例-反向代理&#34;&gt;#&lt;/a&gt; 4、nginx 配置实例 - 反向代理&lt;/h2&gt;
&lt;h2 id=&#34;5-nginx-配置实例-负载均衡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-nginx-配置实例-负载均衡&#34;&gt;#&lt;/a&gt; 5、nginx 配置实例 - 负载均衡&lt;/h2&gt;
&lt;h2 id=&#34;6-nginx-配置实例-动静分离&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-nginx-配置实例-动静分离&#34;&gt;#&lt;/a&gt; 6、nginx 配置实例 - 动静分离&lt;/h2&gt;
&lt;h2 id=&#34;7-nginx-原理与优化参数配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-nginx-原理与优化参数配置&#34;&gt;#&lt;/a&gt; 7、nginx 原理与优化参数配置&lt;/h2&gt;
&lt;h2 id=&#34;8-搭建-nginx-高可用集群&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#8-搭建-nginx-高可用集群&#34;&gt;#&lt;/a&gt; 8、搭建 nginx 高可用集群&lt;/h2&gt;
&lt;p&gt;（1）搭建 nginx 高可用集群（主从模式）&lt;/p&gt;
&lt;p&gt;（2）搭建 nginx 高可用集群（双主模式）&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;nginx简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx简介&#34;&gt;#&lt;/a&gt; nginx 简介&lt;/h1&gt;
&lt;h2 id=&#34;1-什么是nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-什么是nginx&#34;&gt;#&lt;/a&gt; 1、什么是 nginx&lt;/h2&gt;
&lt;p&gt;Nginx (“engine x”) 是一个高性能的 HTTP 和反向代理服务器，特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用 nginx 网站用户有：百度、京东、新浪、网易、腾讯、淘宝等&lt;/p&gt;
&lt;h2 id=&#34;2-反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-反向代理&#34;&gt;#&lt;/a&gt; 2、反向代理&lt;/h2&gt;
&lt;h3 id=&#34;21-正向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#21-正向代理&#34;&gt;#&lt;/a&gt; 2.1、正向代理&lt;/h3&gt;
&lt;p&gt;需要在客户端配置代理服务器进行指定网站访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527212532451.png&#34; alt=&#34;image-20210527212532451&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;22-反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#22-反向代理&#34;&gt;#&lt;/a&gt; 2.2、反向代理&lt;/h3&gt;
&lt;p&gt;暴露的是代理服务器地址，隐藏了真实服务器 IP 地址，不需要在客户端配置代理服务器，就相当于客户端只是单纯的认为我们的反向代理服务器才是真正的服务器。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527212846955.png&#34; alt=&#34;image-20210527212846955&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-负载均衡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-负载均衡&#34;&gt;#&lt;/a&gt; 3、负载均衡&lt;/h2&gt;
&lt;p&gt;单个服务器解决不了，增加服务器的数量，然后将请求分发到各个服务器上，将原先请求集中到单个服务器上的情况改为将请求分发到多个服务器上，将负载分发到不同的服务器，也就是我们所说的负载均衡。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527213914267.png&#34; alt=&#34;image-20210527213914267&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-动静分离&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-动静分离&#34;&gt;#&lt;/a&gt; 4、动静分离&lt;/h2&gt;
&lt;p&gt;为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527215607579.png&#34; alt=&#34;image-20210527215607579&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;nginx的安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx的安装&#34;&gt;#&lt;/a&gt; nginx 的安装&lt;/h1&gt;
&lt;h2 id=&#34;1-这里我没有用服务器学习直接xshell远程连接虚拟机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-这里我没有用服务器学习直接xshell远程连接虚拟机&#34;&gt;#&lt;/a&gt; 1、这里我没有用服务器学习，直接 xshell 远程连接虚拟机&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527220757094.png&#34; alt=&#34;image-20210527220757094&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-进行nginx安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-进行nginx安装&#34;&gt;#&lt;/a&gt; 2、进行 nginx 安装&lt;/h2&gt;
&lt;h3 id=&#34;第一步安装pcre&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一步安装pcre&#34;&gt;#&lt;/a&gt; 第一步，安装 pcre&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接 pcre 官网下载相应的 tar 包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527222031652.png&#34; alt=&#34;image-20210527222031652&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;解压之后进行 pcre-8.44 文件夹，执行 &lt;code&gt;./configure&lt;/code&gt;  命令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;== 这里需要注意的是 linux 系统要安装 gcc 和 gcc-c++ 库&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; gcc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; -y gcc-c++&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;安装完之后在 pcre-8.44 文件夹下执行 &lt;code&gt;./configure&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;继续执行 &lt;code&gt;make &amp;amp;&amp;amp; make install&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;至此 prce 安装完成，查看版本 &lt;code&gt;pcre-config --version&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527222734029.png&#34; alt=&#34;image-20210527222734029&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第二步安装-openssl&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二步安装-openssl&#34;&gt;#&lt;/a&gt; 第二步，安装 openssl&lt;/h3&gt;
&lt;h3 id=&#34;第三步安装zlib&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三步安装zlib&#34;&gt;#&lt;/a&gt; 第三步，安装 zlib&lt;/h3&gt;
&lt;p&gt;直接通过 yum 命令安装以上两个&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum -y &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; zlib zlib-devel gcc-c++ libtool openssl openssl-devel&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;最后安装nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后安装nginx&#34;&gt;#&lt;/a&gt; 最后安装 nginx&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 使用命令解压&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;tar&lt;/span&gt; -xvf nginx-1.21.0.tar.gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 进入 nginx 文件夹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./configure&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;3-启动服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-启动服务&#34;&gt;#&lt;/a&gt; 3、启动服务&lt;/h2&gt;
&lt;p&gt;&lt;mark&gt;进入目录 /usr/local/nginx/sbin/nginx 启动服务&lt;/mark&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./nginx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527223628933.png&#34; alt=&#34;image-20210527223628933&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;进入 nginx 配置文件，发现默认端口是 80&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527223908493.png&#34; alt=&#34;image-20210527223908493&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527223817099.png&#34; alt=&#34;image-20210527223817099&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;在 centOS 中访问到了 nginx 页面&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527224249185.png&#34; alt=&#34;image-20210527224249185&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-在windows-系统中访问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-在windows-系统中访问&#34;&gt;#&lt;/a&gt; 4、在 windows 系统中访问&lt;/h2&gt;
&lt;p&gt;在 windows 系统中访问 linux 中 nginx，默认不能访问的，因为防火墙问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关闭防火墙&lt;/li&gt;
&lt;li&gt;开放访问的端口号，80 端口&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看开放的端口号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;firewall-cmd --list-all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 设置开放的端口号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;firewall-cmd --add-port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;/tcp --permanent&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 重启防火墙&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;firewall-cmd --reload&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527224723786.png&#34; alt=&#34;image-20210527224723786&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 windows 系统中也访问到了 nginx 页面&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527224751817.png&#34; alt=&#34;image-20210527224751817&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nginx操作的常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx操作的常用命令&#34;&gt;#&lt;/a&gt; nginx 操作的常用命令&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 nginx 操作命令前提条件：必须进入 nginx 的目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; /usr/local/nginx/sbin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;2、查看 nginx 的版本号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@CentOS-7 sbin&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ./nginx -v&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;3、启动 nginx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@CentOS-7 sbin&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ./nginx&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;4、关闭 nginx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-bashj&#34;&gt;[root@CentOS-7 sbin]# ./nginx -s stop
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;5、重新加载 nginx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@CentOS-7 sbin&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# ./nginx -s reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;nginx配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx配置文件&#34;&gt;#&lt;/a&gt; nginx 配置文件&lt;/h1&gt;
&lt;h2 id=&#34;1-nginx配置文件位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-nginx配置文件位置&#34;&gt;#&lt;/a&gt; 1、nginx 配置文件位置&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528202619737.png&#34; alt=&#34;image-20210528202619737&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-nginx配置文件组成&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-nginx配置文件组成&#34;&gt;#&lt;/a&gt; 2、nginx 配置文件组成&lt;/h2&gt;
&lt;p&gt;（1）nginx 配置文件有三部分组成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一部分 全局块
&lt;ul&gt;
&lt;li&gt;从配置文件开始到 &lt;code&gt;events块&lt;/code&gt; 之间的内容，主要会设置一些影响 nginx 服务器整体运行的配置指令&lt;/li&gt;
&lt;li&gt;比如 worker_processes 1；worker_processes 值越大，可以支持的并发处理量也越多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第二部分 events 块
&lt;ul&gt;
&lt;li&gt;events 块涉及的指令主要影响 nginx 服务器与用户的网络连接&lt;/li&gt;
&lt;li&gt;比如 worker_connections   1024; 支持的最大连接数为 1024&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;第三部分 http 块
&lt;ul&gt;
&lt;li&gt;nginx 服务器配置中最频繁的部分&lt;/li&gt;
&lt;li&gt;http 块也可以包括 http 全局块、server 块&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;nginx-配置实例反向代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx-配置实例反向代理&#34;&gt;#&lt;/a&gt; nginx 配置实例 =&amp;gt; 反向代理&lt;/h1&gt;
&lt;h2 id=&#34;1-实现效果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-实现效果&#34;&gt;#&lt;/a&gt; 1、实现效果&lt;/h2&gt;
&lt;p&gt;（1）打开浏览器，在浏览器地址栏输入地址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy4xMjMuY29t&#34;&gt;www.123.com&lt;/span&gt;，跳转到 liunx 系统 tomcat 主页面中&lt;/p&gt;
&lt;h2 id=&#34;2-准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-准备工作&#34;&gt;#&lt;/a&gt; 2、准备工作&lt;/h2&gt;
&lt;p&gt;（1）在 liunx 系统安装 tomcat，使用默认端口 8080&lt;/p&gt;
&lt;p&gt;tomcat 安装文件放到 liunx 系统中，解压&lt;/p&gt;
&lt;p&gt;进入 tomcat 的 bin 目录中， &lt;code&gt;./startup.sh&lt;/code&gt;  启动 tomcat 服务器&lt;/p&gt;
&lt;p&gt;（2）对外开放访问的端口&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;firewall-cmd --add-port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;/tcp --permanent&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;firewall-cmd --reload&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 查看已经开放的端口号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;firewall-cmd --list-all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;（3）在 windows 系统中通过浏览器访问 tomcat 服务器&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210132297.png&#34; alt=&#34;image-20210528210132297&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-访问过程的分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-访问过程的分析&#34;&gt;#&lt;/a&gt; 3、访问过程的分析&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210228570.png&#34; alt=&#34;image-20210528210228570&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-具体配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-具体配置&#34;&gt;#&lt;/a&gt; 4、具体配置&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;第一步 在 windows 系统的 host 文件进行域名和 ip 对应关系的配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210439297.png&#34; alt=&#34;image-20210528210439297&#34;&gt;&lt;/p&gt;
&lt;p&gt;继续访问 tomcat&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210724394.png&#34; alt=&#34;image-20210528210724394&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第二步 在 nginx 进行请求转发的配置（反向代理配置）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528211211559.png&#34; alt=&#34;image-20210528211211559&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-最终测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-最终测试&#34;&gt;#&lt;/a&gt; 5、最终测试&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528211428444.png&#34; alt=&#34;image-20210528211428444&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nginx反向代理实例2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx反向代理实例2&#34;&gt;#&lt;/a&gt; nginx 反向代理实例 2&lt;/h1&gt;
&lt;h2 id=&#34;1-实现效果-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-实现效果-2&#34;&gt;#&lt;/a&gt; 1、实现效果&lt;/h2&gt;
&lt;p&gt;使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中&lt;/p&gt;
&lt;p&gt;nginx 监听端口为 9001&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNDIvOjkwMDEvZWR1Lw==&#34;&gt;http://10.102.126.42/:9001/edu/&lt;/span&gt; 直接跳转到 127.0.0.1:8080&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;访问 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNDIvOjkwMDEvdm9kLw==&#34;&gt;http://10.102.126.42/:9001/vod/&lt;/span&gt; 直接跳转到 127.0.0.1:8081&lt;/mark&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-准备工作-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-准备工作-2&#34;&gt;#&lt;/a&gt; 2、准备工作&lt;/h2&gt;
&lt;p&gt;（1）准备两个 tomcat 服务器，一个 8080 端口，一个 8081 端口&lt;/p&gt;
&lt;p&gt;（2）创建文件夹和测试页面&lt;/p&gt;
&lt;h2 id=&#34;3-具体配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-具体配置&#34;&gt;#&lt;/a&gt; 3、具体配置&lt;/h2&gt;
&lt;p&gt;（1）找到 nginx 配置文件，进行反向代理配置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528214716255.png&#34; alt=&#34;image-20210528214716255&#34;&gt;&lt;/p&gt;
&lt;p&gt;（2）开放对外访问的端口号：9001，8080，8081&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@CentOS-7 conf&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# firewall-cmd --add-port=9001/tcp --permanent&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;success&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@CentOS-7 conf&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# firewall-cmd --reload&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;success&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;root@CentOS-7 conf&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;# firewall-cmd --list-all&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;public &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;active&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  target: default&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  icmp-block-inversion: no&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  interfaces: ens32&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sources: &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  services: dhcpv6-client &lt;span class=&#34;token function&#34;&gt;ssh&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ports: &lt;span class=&#34;token number&#34;&gt;80&lt;/span&gt;/tcp &lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;/tcp &lt;span class=&#34;token number&#34;&gt;8081&lt;/span&gt;/tcp &lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;/tcp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  protocols: &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  masquerade: no&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  forward-ports: &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  source-ports: &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  icmp-blocks: &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  rich rules:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;4-最终测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-最终测试&#34;&gt;#&lt;/a&gt; 4、最终测试&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528215314155.png&#34; alt=&#34;image-20210528215314155&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528215339564.png&#34; alt=&#34;image-20210528215339564&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;location指令说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#location指令说明&#34;&gt;#&lt;/a&gt; location 指令说明&lt;/h1&gt;
&lt;p&gt;该指令用于匹配 URL&lt;/p&gt;
&lt;p&gt;语法如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528215626081.png&#34; alt=&#34;image-20210528215626081&#34;&gt;&lt;/p&gt;
&lt;p&gt;1、 &lt;code&gt;= &lt;/code&gt; ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配成功，就停止继续向下搜索并立即处理该请求。&lt;/p&gt;
&lt;p&gt;2、 &lt;code&gt;~&lt;/code&gt; ：用于表示 uri 包含正则表达式，并且区分大小写。&lt;/p&gt;
&lt;p&gt;3、 &lt;code&gt;~*&lt;/code&gt; ：用于表示 uri 包含正则表达式，并且不区分大小写。&lt;/p&gt;
&lt;p&gt;4、 &lt;code&gt;^~&lt;/code&gt; ：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;注意：如果 uri 包含正则表达式，则必须要有～或者～* 标识。&lt;/mark&gt;&lt;/p&gt;
&lt;h1 id=&#34;nginx配置实例-负载均衡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx配置实例-负载均衡&#34;&gt;#&lt;/a&gt; nginx 配置实例 - 负载均衡&lt;/h1&gt;
&lt;h2 id=&#34;1-实现效果-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-实现效果-3&#34;&gt;#&lt;/a&gt; 1、实现效果&lt;/h2&gt;
&lt;p&gt;（1）浏览器地址栏输入地址 http://192.168.17.129/edu/a.html，负载均衡效果，平均 8080 和 8081 端口中&lt;/p&gt;
&lt;h2 id=&#34;2-准备工作-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-准备工作-3&#34;&gt;#&lt;/a&gt; 2、准备工作&lt;/h2&gt;
&lt;p&gt;（1）准备两台 tomcat 服务器，一台 8080，一台 8081&lt;/p&gt;
&lt;p&gt;（2）在两台 tomcat 里面 webapps 目录中，创建名称是 edu 文件夹，在 edu 文件夹中创建页面 a.html，用于测试&lt;/p&gt;
&lt;h2 id=&#34;3-在nginx-的配置文件中进行负载均衡的配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-在nginx-的配置文件中进行负载均衡的配置&#34;&gt;#&lt;/a&gt; 3、在 nginx 的配置文件中进行负载均衡的配置&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528221342515.png&#34; alt=&#34;image-20210528221342515&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-配置成功&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-配置成功&#34;&gt;#&lt;/a&gt; 4、配置成功&lt;/h2&gt;
&lt;p&gt;测试，请求同一个路径，轮流地访问 8080，8081 两个服务器，即实现了负载均衡的效果&lt;/p&gt;
&lt;h2 id=&#34;5-nginx负载均衡的策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-nginx负载均衡的策略&#34;&gt;#&lt;/a&gt; 5、nginx 负载均衡的策略&lt;/h2&gt;
&lt;h3 id=&#34;1-轮询默认&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-轮询默认&#34;&gt;#&lt;/a&gt; 1、轮询（默认）&lt;/h3&gt;
&lt;p&gt;每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除&lt;/p&gt;
&lt;h3 id=&#34;2-weight&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-weight&#34;&gt;#&lt;/a&gt; 2、weight&lt;/h3&gt;
&lt;p&gt;weight 代表权重，默认为 1，权重越高，被分配的客户端越多&lt;/p&gt;
&lt;p&gt;指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;upstream server_pool&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.5.21 &lt;span class=&#34;token assign-left variable&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.5.22 &lt;span class=&#34;token assign-left variable&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;3-ip_hash&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-ip_hash&#34;&gt;#&lt;/a&gt; 3、ip_hash&lt;/h3&gt;
&lt;p&gt;每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。例如：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;upstream server_pool&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ip_hash&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.5.21:80&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.5.22:80&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;4-fair第三方&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-fair第三方&#34;&gt;#&lt;/a&gt; 4、fair（第三方）&lt;/h3&gt;
&lt;p&gt;按后端服务器的响应时间来分配请求，响应时间短的优先分配。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;upstream server_pool&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.5.21:80&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;.5.22:80&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fair&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;nginx配置实例-动静分离&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx配置实例-动静分离&#34;&gt;#&lt;/a&gt; nginx 配置实例 - 动静分离&lt;/h1&gt;
&lt;h2 id=&#34;1-什么是动静分离&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-什么是动静分离&#34;&gt;#&lt;/a&gt; 1、什么是动静分离&lt;/h2&gt;
&lt;p&gt;Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分开，可以理解成使用 Nginx 处理静态页面，Tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外一种方法就是动态跟静态文件混合在一起发布，通过 nginx 来分开。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528223635697.png&#34; alt=&#34;image-20210528223635697&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以设置浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 Expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可，所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件，不建议使用 Expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个 URL，发送一个请求，比对服务器该文件最后更新时间，没有变化，则不会从服务器抓取，返回状态码 304，如果有修改，则直接从服务器重新下载，返回状态码 200。&lt;/p&gt;
&lt;h2 id=&#34;2-准备工作-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-准备工作-4&#34;&gt;#&lt;/a&gt; 2、准备工作&lt;/h2&gt;
&lt;p&gt;（1）在 linux 系统中准备静态资源，用于进行访问&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528225532427.png&#34; alt=&#34;image-20210528225532427&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-具体配置-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-具体配置-2&#34;&gt;#&lt;/a&gt; 3、具体配置&lt;/h2&gt;
&lt;p&gt;（1）在 nginx 配置文件中进行配置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528225736743.png&#34; alt=&#34;image-20210528225736743&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-最终测试-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-最终测试-2&#34;&gt;#&lt;/a&gt; 4、最终测试&lt;/h2&gt;
&lt;p&gt;（1）浏览器输入地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNDIvaW1hZ2UvMS5wbmc=&#34;&gt;http://10.102.126.42/image/1.png&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528225829853.png&#34; alt=&#34;image-20210528225829853&#34;&gt;&lt;/p&gt;
&lt;p&gt;直接输入地址 http://10.102.126.42/image/，可以将静态资源全部加载出来，== 注意最后一个 &lt;code&gt;/&lt;/code&gt; ，就是 image 后面的 &lt;code&gt;/&lt;/code&gt;  不能少，不然会出现 404&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529170620289.png&#34; alt=&#34;image-20210529170620289&#34;&gt;&lt;/p&gt;
&lt;p&gt;（2）浏览器输入：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNDIvd3d3L2EuaHRtbA==&#34;&gt;http://10.102.126.42/www/a.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528230839058.png&#34; alt=&#34;image-20210528230839058&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nginx配置高可用集群&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx配置高可用集群&#34;&gt;#&lt;/a&gt; nginx 配置高可用集群&lt;/h1&gt;
&lt;h2 id=&#34;1-什么是nginx高可用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-什么是nginx高可用&#34;&gt;#&lt;/a&gt; 1、什么是 nginx 高可用&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529195702822.png&#34; alt=&#34;image-20210529195702822&#34;&gt;&lt;/p&gt;
&lt;p&gt;（1）需要两台 nginx 服务器&lt;/p&gt;
&lt;p&gt;（2）需要 keepalived&lt;/p&gt;
&lt;p&gt;（3）需要虚拟 ip 地址&lt;/p&gt;
&lt;h2 id=&#34;2-配置高可用的准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-配置高可用的准备工作&#34;&gt;#&lt;/a&gt; 2、配置高可用的准备工作&lt;/h2&gt;
&lt;p&gt;（1）需要配置两台服务器 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNDIv&#34;&gt;http://10.102.126.42/&lt;/span&gt; 和 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi42OC43Ni8=&#34;&gt;http://10.102.68.76/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;（2）在两台服务器安装 nginx&lt;/p&gt;
&lt;p&gt;（3）在两台服务器安装 keepalived&lt;/p&gt;
&lt;h2 id=&#34;3-在两台服务器安装keepalived&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-在两台服务器安装keepalived&#34;&gt;#&lt;/a&gt; 3、在两台服务器安装 keepalived&lt;/h2&gt;
&lt;p&gt;（1）使用 yum 命令进行安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yum &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; keepalived -y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;rpm&lt;/span&gt; -q -a keepalived	&lt;span class=&#34;token comment&#34;&gt;# 查看 keepalived 是否安装&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529203452428.png&#34; alt=&#34;image-20210529203452428&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529203544568.png&#34; alt=&#34;image-20210529203544568&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;在这步操作中可能会出现一下问题&lt;/mark&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Error downloading packages:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  keepalived-1.3.5-19.el7.x86_64: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Errno &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; No &lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; mirrors to try.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;:net-snmp-libs-5.7.2-49.el7_9.1.x86_64: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Errno &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; No &lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; mirrors to try.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;:net-snmp-agent-libs-5.7.2-49.el7_9.1.x86_64: &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;Errno &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; No &lt;span class=&#34;token function&#34;&gt;more&lt;/span&gt; mirrors to try.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529203728931.png&#34; alt=&#34;image-20210529203728931&#34;&gt;&lt;/p&gt;
&lt;p&gt;出现这种情况百度的话是这种办法&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529204055515.png&#34; alt=&#34;image-20210529204055515&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;但我觉得首先应该检查自己的虚拟机是否是联网状态，即 ping 百度看能不能 ping 通，如果虚拟机没有联网是没办法通过 yum 命令安装的&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;我就是通过虚拟机联网解决了&lt;/p&gt;
&lt;p&gt;（2）安装之后，在 etc 里面生成目录 keepalived，有文件  &lt;code&gt;keepalived.conf&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-完成高可用配置主从配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-完成高可用配置主从配置&#34;&gt;#&lt;/a&gt; 4、完成高可用配置（主从配置）&lt;/h2&gt;
&lt;p&gt;（1）修改 &lt;code&gt;/etc/keepalived/keepalived.conf&lt;/code&gt;  配置文件&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;global_defs &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	notification_email &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		acassen@firewall.loc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		failover@firewall.loc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		sysadmin@firewall.loc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	notification_email_from Alexandre.Cassen@firewall.loc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	smtp_server &lt;span class=&#34;token number&#34;&gt;10.102&lt;/span&gt;.126.42&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	smtp_connect_timeout &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	router_id LVS_DEVEL &lt;span class=&#34;token comment&#34;&gt;# 访问到主机，这是主机的名字，和 localhost 差不多的意思&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vrrp_script chk_http_port &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	script &lt;span class=&#34;token string&#34;&gt;&#34;/usr/local/src/nginx_check.sh&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	interval &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#（检测脚本执行的间隔）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	weight &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 权重&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vrrp_instance VI_1 &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	state BACKUP &lt;span class=&#34;token comment&#34;&gt;# 备份服务器上将 MASTER 改为 BACKUP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	interface ens32 //网卡&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	virtual_router_id &lt;span class=&#34;token number&#34;&gt;51&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 主、备机的 virtual_router_id 必须相同&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	priority &lt;span class=&#34;token number&#34;&gt;90&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 主、备机取不同的优先级，主机值较大，备份机值较小&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	advert_int &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	authentication &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		auth_type PASS&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		auth_pass &lt;span class=&#34;token number&#34;&gt;1111&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	virtual_ipaddress &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token number&#34;&gt;10.102&lt;/span&gt;.126.50 &lt;span class=&#34;token comment&#34;&gt;# VRRP H 虚拟地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;（2）在 &lt;code&gt;/usr/local/src&lt;/code&gt;  添加检测脚本&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token shebang important&#34;&gt;#!/bin/bash&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; -C nginx –-no-header &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; -l&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$A&lt;/span&gt; -eq &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	/usr/local/nginx/sbin/nginx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ps&lt;/span&gt; -C nginx --no-header &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wc&lt;/span&gt; -l&lt;span class=&#34;token variable&#34;&gt;`&lt;/span&gt;&lt;/span&gt; -eq &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;then&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token function&#34;&gt;killall&lt;/span&gt; keepalived&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;mark&gt;注意这里两台服务器都要配置&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;（3）把两台服务器上 nginx 和 keepalived 启动&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 启动 nginx&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./nginx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 启动 keepalived&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl start keepalived.service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;5-最终测试-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-最终测试-2&#34;&gt;#&lt;/a&gt; 5、最终测试&lt;/h2&gt;
&lt;p&gt;（1）在浏览器地址栏输入 虚拟 ip 地址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNTAv&#34;&gt;http://10.102.126.50/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529220108249.png&#34; alt=&#34;image-20210529220108249&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到服务器已经绑定了虚拟 ip&lt;/p&gt;
&lt;p&gt;（2）把主服务器（10.102.126.50）nginx 和 keepalived 停止，再输入 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEwLjEwMi4xMjYuNTAv&#34;&gt;http://10.102.126.50/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529223105940.png&#34; alt=&#34;image-20210529223105940&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;依旧能进行访问&lt;/mark&gt;，说明此时集群搭建成功&lt;/p&gt;
&lt;p&gt;可以看到备份服务器也绑定了虚拟 ip&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529223435351.png&#34; alt=&#34;image-20210529223435351&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;nginx的原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx的原理&#34;&gt;#&lt;/a&gt; nginx 的原理&lt;/h1&gt;
&lt;h2 id=&#34;1-master-和-worker&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-master-和-worker&#34;&gt;#&lt;/a&gt; 1、master 和 worker&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529225621258.png&#34; alt=&#34;image-20210529225621258&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-worker-如何进行工作的&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-worker-如何进行工作的&#34;&gt;#&lt;/a&gt; 2、worker 如何进行工作的&lt;/h2&gt;
&lt;p&gt;每一个 worker 都会争抢请求，争抢到请求则执行。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529225650761.png&#34; alt=&#34;image-20210529225650761&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-一个master和多个worker有什么好处&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-一个master和多个worker有什么好处&#34;&gt;#&lt;/a&gt; 3、一个 master 和多个 worker 有什么好处&lt;/h2&gt;
&lt;p&gt;（1）可以使用 nginx –s reload 热部署，利用 nginx 进行热部署操作&lt;/p&gt;
&lt;p&gt;例如，当其中一个 worker 在执行请求的时候，其他的三个 worker 进行更新，然后可以继续争抢请求，此时还有一个 worker 没有更新热部署，当执行完任务就会进行热部署更新。&lt;/p&gt;
&lt;p&gt;（2）每个 woker 是独立的进程，如果有其中的一个 woker 出现问题，其他 woker 独立的，继续进行争抢，实现请求过程，不会造成服务中断&lt;/p&gt;
&lt;h2 id=&#34;4-设置多少个worker合适&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-设置多少个worker合适&#34;&gt;#&lt;/a&gt; 4、设置多少个 worker 合适&lt;/h2&gt;
&lt;p&gt;worker 数和服务器的 cpu 数相等是最为适宜的&lt;/p&gt;
&lt;h2 id=&#34;5-连接数-worker_connection&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-连接数-worker_connection&#34;&gt;#&lt;/a&gt; 5、连接数 worker_connection&lt;/h2&gt;
&lt;p&gt;&lt;mark&gt;第一个：发送请求，占用了 worker 的几个连接数？&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;答案：2 个或者是 4 个，因为当客户端通过 nginx 请求静态资源的时候，此时 nginx 连接请求，并返回数据，此时连接数为 2 个。当客户端通过 nginx 请求后端，例如访问数据库的时候就需要连接 tomcat，此时还要返回数据，就有 4 个连接数。&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;第二个：nginx 有一个 master，有四个 worker，每个 worker 支持最大的连接数 1024. 那么支持的最大并发数是多少？&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;普通的静态访问最大并发数是：worker_connections \* worker_processes /2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;而如果是 HTTP 作 为反向代理来说，最大并发数量应该是 worker_connections \* worker_processes/4。&lt;/code&gt;&lt;/p&gt;
</content>
        <category term="Nginx" />
        <updated>2021-04-02T08:30:03.000Z</updated>
    </entry>
</feed>

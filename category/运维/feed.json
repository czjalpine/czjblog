{
    "version": "https://jsonfeed.org/version/1",
    "title": "失心耀的博客 • All posts by \"运维\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/nginx/",
            "url": "http://example.com/nginx/",
            "title": "Nginx初步学习",
            "date_published": "2021-05-13T08:30:03.000Z",
            "content_html": "<span id=\"more\"></span>\n<h1 id=\"nginx\"><a class=\"markdownIt-Anchor\" href=\"#nginx\">#</a> nginx</h1>\n<p>推荐视频：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMXpKNDExdzdTVj9wPTE=\">尚硅谷 Nginx</span></p>\n<h1 id=\"内容概览\"><a class=\"markdownIt-Anchor\" href=\"#内容概览\">#</a> 内容概览</h1>\n<h2 id=\"1-nginx-简介\"><a class=\"markdownIt-Anchor\" href=\"#1-nginx-简介\">#</a> 1、nginx 简介</h2>\n<p>（1）介绍 nginx 的应用场景和具体可以做什么事情</p>\n<p>（2）介绍什么是反向代理</p>\n<p>（3）介绍什么是负载均衡</p>\n<p>（4）介绍什么是动静分离</p>\n<h2 id=\"2-nginx-安装\"><a class=\"markdownIt-Anchor\" href=\"#2-nginx-安装\">#</a> 2、nginx 安装</h2>\n<p>（1）介绍 nginx 在 linux 系统中如何进行安装</p>\n<h2 id=\"3-nginx-常用的命令和配置文件\"><a class=\"markdownIt-Anchor\" href=\"#3-nginx-常用的命令和配置文件\">#</a> 3、nginx 常用的命令和配置文件</h2>\n<p>（1）介绍 nginx 启动、关闭、重新加载命令</p>\n<p>（2）介绍 nginx 的配置文件</p>\n<h2 id=\"4-nginx-配置实例-反向代理\"><a class=\"markdownIt-Anchor\" href=\"#4-nginx-配置实例-反向代理\">#</a> 4、nginx 配置实例 - 反向代理</h2>\n<h2 id=\"5-nginx-配置实例-负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#5-nginx-配置实例-负载均衡\">#</a> 5、nginx 配置实例 - 负载均衡</h2>\n<h2 id=\"6-nginx-配置实例-动静分离\"><a class=\"markdownIt-Anchor\" href=\"#6-nginx-配置实例-动静分离\">#</a> 6、nginx 配置实例 - 动静分离</h2>\n<h2 id=\"7-nginx-原理与优化参数配置\"><a class=\"markdownIt-Anchor\" href=\"#7-nginx-原理与优化参数配置\">#</a> 7、nginx 原理与优化参数配置</h2>\n<h2 id=\"8-搭建-nginx-高可用集群\"><a class=\"markdownIt-Anchor\" href=\"#8-搭建-nginx-高可用集群\">#</a> 8、搭建 nginx 高可用集群</h2>\n<p>（1）搭建 nginx 高可用集群（主从模式）</p>\n<p>（2）搭建 nginx 高可用集群（双主模式）</p>\n<hr>\n<h1 id=\"nginx简介\"><a class=\"markdownIt-Anchor\" href=\"#nginx简介\">#</a> nginx 简介</h1>\n<h2 id=\"1-什么是nginx\"><a class=\"markdownIt-Anchor\" href=\"#1-什么是nginx\">#</a> 1、什么是 nginx</h2>\n<p>Nginx (“engine x”) 是一个高性能的 HTTP 和反向代理服务器，特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用 nginx 网站用户有：百度、京东、新浪、网易、腾讯、淘宝等</p>\n<h2 id=\"2-反向代理\"><a class=\"markdownIt-Anchor\" href=\"#2-反向代理\">#</a> 2、反向代理</h2>\n<h3 id=\"21-正向代理\"><a class=\"markdownIt-Anchor\" href=\"#21-正向代理\">#</a> 2.1、正向代理</h3>\n<p>需要在客户端配置代理服务器进行指定网站访问</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527212532451.png\" alt=\"image-20210527212532451\"></p>\n<h3 id=\"22-反向代理\"><a class=\"markdownIt-Anchor\" href=\"#22-反向代理\">#</a> 2.2、反向代理</h3>\n<p>暴露的是代理服务器地址，隐藏了真实服务器 IP 地址，不需要在客户端配置代理服务器，就相当于客户端只是单纯的认为我们的反向代理服务器才是真正的服务器。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527212846955.png\" alt=\"image-20210527212846955\"></p>\n<h2 id=\"3-负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#3-负载均衡\">#</a> 3、负载均衡</h2>\n<p>单个服务器解决不了，增加服务器的数量，然后将请求分发到各个服务器上，将原先请求集中到单个服务器上的情况改为将请求分发到多个服务器上，将负载分发到不同的服务器，也就是我们所说的负载均衡。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527213914267.png\" alt=\"image-20210527213914267\"></p>\n<h2 id=\"4-动静分离\"><a class=\"markdownIt-Anchor\" href=\"#4-动静分离\">#</a> 4、动静分离</h2>\n<p>为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527215607579.png\" alt=\"image-20210527215607579\"></p>\n<hr>\n<h1 id=\"nginx的安装\"><a class=\"markdownIt-Anchor\" href=\"#nginx的安装\">#</a> nginx 的安装</h1>\n<h2 id=\"1-这里我没有用服务器学习直接xshell远程连接虚拟机\"><a class=\"markdownIt-Anchor\" href=\"#1-这里我没有用服务器学习直接xshell远程连接虚拟机\">#</a> 1、这里我没有用服务器学习，直接 xshell 远程连接虚拟机</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527220757094.png\" alt=\"image-20210527220757094\"></p>\n<h2 id=\"2-进行nginx安装\"><a class=\"markdownIt-Anchor\" href=\"#2-进行nginx安装\">#</a> 2、进行 nginx 安装</h2>\n<h3 id=\"第一步安装pcre\"><a class=\"markdownIt-Anchor\" href=\"#第一步安装pcre\">#</a> 第一步，安装 pcre</h3>\n<ul>\n<li>直接 pcre 官网下载相应的 tar 包</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527222031652.png\" alt=\"image-20210527222031652\"></p>\n<ul>\n<li>\n<p>解压之后进行 pcre-8.44 文件夹，执行 <code>./configure</code>  命令</p>\n</li>\n<li>\n<p>== 这里需要注意的是 linux 系统要安装 gcc 和 gcc-c++ 库</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> gcc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token function\">install</span> -y gcc-c++</pre></td></tr></table></figure><p>安装完之后在 pcre-8.44 文件夹下执行 <code>./configure</code></p>\n</li>\n<li>\n<p>继续执行 <code>make &amp;&amp; make install</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><p>至此 prce 安装完成，查看版本 <code>pcre-config --version</code></p>\n</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527222734029.png\" alt=\"image-20210527222734029\"></p>\n<h3 id=\"第二步安装-openssl\"><a class=\"markdownIt-Anchor\" href=\"#第二步安装-openssl\">#</a> 第二步，安装 openssl</h3>\n<h3 id=\"第三步安装zlib\"><a class=\"markdownIt-Anchor\" href=\"#第三步安装zlib\">#</a> 第三步，安装 zlib</h3>\n<p>直接通过 yum 命令安装以上两个</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum -y <span class=\"token function\">install</span> <span class=\"token function\">make</span> zlib zlib-devel gcc-c++ libtool openssl openssl-devel</pre></td></tr></table></figure><h3 id=\"最后安装nginx\"><a class=\"markdownIt-Anchor\" href=\"#最后安装nginx\">#</a> 最后安装 nginx</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 使用命令解压</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">tar</span> -xvf nginx-1.21.0.tar.gz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 进入 nginx 文件夹</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>./configure</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr></table></figure><h2 id=\"3-启动服务\"><a class=\"markdownIt-Anchor\" href=\"#3-启动服务\">#</a> 3、启动服务</h2>\n<p><mark>进入目录 /usr/local/nginx/sbin/nginx 启动服务</mark></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./nginx</pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527223628933.png\" alt=\"image-20210527223628933\"></p>\n<p><mark>进入 nginx 配置文件，发现默认端口是 80</mark></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527223908493.png\" alt=\"image-20210527223908493\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527223817099.png\" alt=\"image-20210527223817099\"></p>\n<p><mark>在 centOS 中访问到了 nginx 页面</mark></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527224249185.png\" alt=\"image-20210527224249185\"></p>\n<h2 id=\"4-在windows-系统中访问\"><a class=\"markdownIt-Anchor\" href=\"#4-在windows-系统中访问\">#</a> 4、在 windows 系统中访问</h2>\n<p>在 windows 系统中访问 linux 中 nginx，默认不能访问的，因为防火墙问题</p>\n<ol>\n<li>关闭防火墙</li>\n<li>开放访问的端口号，80 端口</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看开放的端口号</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>firewall-cmd --list-all</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 设置开放的端口号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>firewall-cmd --add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp --permanent</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 重启防火墙</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>firewall-cmd --reload</pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527224723786.png\" alt=\"image-20210527224723786\"></p>\n<p>在 windows 系统中也访问到了 nginx 页面</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210527224751817.png\" alt=\"image-20210527224751817\"></p>\n<h1 id=\"nginx操作的常用命令\"><a class=\"markdownIt-Anchor\" href=\"#nginx操作的常用命令\">#</a> nginx 操作的常用命令</h1>\n<blockquote>\n<p>使用 nginx 操作命令前提条件：必须进入 nginx 的目录</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/local/nginx/sbin</pre></td></tr></table></figure><blockquote>\n<p>2、查看 nginx 的版本号</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@CentOS-7 sbin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./nginx -v</span></pre></td></tr></table></figure><blockquote>\n<p>3、启动 nginx</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@CentOS-7 sbin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./nginx</span></pre></td></tr></table></figure><blockquote>\n<p>4、关闭 nginx</p>\n</blockquote>\n<pre><code class=\"language-bashj\">[root@CentOS-7 sbin]# ./nginx -s stop\n</code></pre>\n<blockquote>\n<p>5、重新加载 nginx</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@CentOS-7 sbin<span class=\"token punctuation\">]</span><span class=\"token comment\"># ./nginx -s reload</span></pre></td></tr></table></figure><h1 id=\"nginx配置文件\"><a class=\"markdownIt-Anchor\" href=\"#nginx配置文件\">#</a> nginx 配置文件</h1>\n<h2 id=\"1-nginx配置文件位置\"><a class=\"markdownIt-Anchor\" href=\"#1-nginx配置文件位置\">#</a> 1、nginx 配置文件位置</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528202619737.png\" alt=\"image-20210528202619737\"></p>\n<h2 id=\"2-nginx配置文件组成\"><a class=\"markdownIt-Anchor\" href=\"#2-nginx配置文件组成\">#</a> 2、nginx 配置文件组成</h2>\n<p>（1）nginx 配置文件有三部分组成</p>\n<ul>\n<li>第一部分 全局块\n<ul>\n<li>从配置文件开始到 <code>events块</code> 之间的内容，主要会设置一些影响 nginx 服务器整体运行的配置指令</li>\n<li>比如 worker_processes 1；worker_processes 值越大，可以支持的并发处理量也越多</li>\n</ul>\n</li>\n<li>第二部分 events 块\n<ul>\n<li>events 块涉及的指令主要影响 nginx 服务器与用户的网络连接</li>\n<li>比如 worker_connections   1024; 支持的最大连接数为 1024</li>\n</ul>\n</li>\n<li>第三部分 http 块\n<ul>\n<li>nginx 服务器配置中最频繁的部分</li>\n<li>http 块也可以包括 http 全局块、server 块</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"nginx-配置实例反向代理\"><a class=\"markdownIt-Anchor\" href=\"#nginx-配置实例反向代理\">#</a> nginx 配置实例 =&gt; 反向代理</h1>\n<h2 id=\"1-实现效果\"><a class=\"markdownIt-Anchor\" href=\"#1-实现效果\">#</a> 1、实现效果</h2>\n<p>（1）打开浏览器，在浏览器地址栏输入地址 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4xMjMuY29t\">www.123.com</span>，跳转到 liunx 系统 tomcat 主页面中</p>\n<h2 id=\"2-准备工作\"><a class=\"markdownIt-Anchor\" href=\"#2-准备工作\">#</a> 2、准备工作</h2>\n<p>（1）在 liunx 系统安装 tomcat，使用默认端口 8080</p>\n<p>tomcat 安装文件放到 liunx 系统中，解压</p>\n<p>进入 tomcat 的 bin 目录中， <code>./startup.sh</code>  启动 tomcat 服务器</p>\n<p>（2）对外开放访问的端口</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>firewall-cmd --add-port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>/tcp --permanent</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>firewall-cmd --reload</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 查看已经开放的端口号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>firewall-cmd --list-all</pre></td></tr></table></figure><p>（3）在 windows 系统中通过浏览器访问 tomcat 服务器</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210132297.png\" alt=\"image-20210528210132297\"></p>\n<h2 id=\"3-访问过程的分析\"><a class=\"markdownIt-Anchor\" href=\"#3-访问过程的分析\">#</a> 3、访问过程的分析</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210228570.png\" alt=\"image-20210528210228570\"></p>\n<h2 id=\"4-具体配置\"><a class=\"markdownIt-Anchor\" href=\"#4-具体配置\">#</a> 4、具体配置</h2>\n<blockquote>\n<p>第一步 在 windows 系统的 host 文件进行域名和 ip 对应关系的配置</p>\n</blockquote>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210439297.png\" alt=\"image-20210528210439297\"></p>\n<p>继续访问 tomcat</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528210724394.png\" alt=\"image-20210528210724394\"></p>\n<blockquote>\n<p>第二步 在 nginx 进行请求转发的配置（反向代理配置）</p>\n</blockquote>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528211211559.png\" alt=\"image-20210528211211559\"></p>\n<h2 id=\"5-最终测试\"><a class=\"markdownIt-Anchor\" href=\"#5-最终测试\">#</a> 5、最终测试</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528211428444.png\" alt=\"image-20210528211428444\"></p>\n<h1 id=\"nginx反向代理实例2\"><a class=\"markdownIt-Anchor\" href=\"#nginx反向代理实例2\">#</a> nginx 反向代理实例 2</h1>\n<h2 id=\"1-实现效果-2\"><a class=\"markdownIt-Anchor\" href=\"#1-实现效果-2\">#</a> 1、实现效果</h2>\n<p>使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中</p>\n<p>nginx 监听端口为 9001</p>\n<p><mark>访问 <span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNDIvOjkwMDEvZWR1Lw==\">http://10.102.126.42/:9001/edu/</span> 直接跳转到 127.0.0.1:8080</mark></p>\n<p><mark>访问 <span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNDIvOjkwMDEvdm9kLw==\">http://10.102.126.42/:9001/vod/</span> 直接跳转到 127.0.0.1:8081</mark></p>\n<h2 id=\"2-准备工作-2\"><a class=\"markdownIt-Anchor\" href=\"#2-准备工作-2\">#</a> 2、准备工作</h2>\n<p>（1）准备两个 tomcat 服务器，一个 8080 端口，一个 8081 端口</p>\n<p>（2）创建文件夹和测试页面</p>\n<h2 id=\"3-具体配置\"><a class=\"markdownIt-Anchor\" href=\"#3-具体配置\">#</a> 3、具体配置</h2>\n<p>（1）找到 nginx 配置文件，进行反向代理配置</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528214716255.png\" alt=\"image-20210528214716255\"></p>\n<p>（2）开放对外访问的端口号：9001，8080，8081</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@CentOS-7 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --add-port=9001/tcp --permanent</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>success</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@CentOS-7 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --reload</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>success</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@CentOS-7 conf<span class=\"token punctuation\">]</span><span class=\"token comment\"># firewall-cmd --list-all</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>public <span class=\"token punctuation\">(</span>active<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  target: default</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  icmp-block-inversion: no</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  interfaces: ens32</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  sources: </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  services: dhcpv6-client <span class=\"token function\">ssh</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  ports: <span class=\"token number\">80</span>/tcp <span class=\"token number\">8080</span>/tcp <span class=\"token number\">8081</span>/tcp <span class=\"token number\">9001</span>/tcp</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  protocols: </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  masquerade: no</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  forward-ports: </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  source-ports: </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  icmp-blocks: </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  rich rules:</pre></td></tr></table></figure><h2 id=\"4-最终测试\"><a class=\"markdownIt-Anchor\" href=\"#4-最终测试\">#</a> 4、最终测试</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528215314155.png\" alt=\"image-20210528215314155\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528215339564.png\" alt=\"image-20210528215339564\"></p>\n<h1 id=\"location指令说明\"><a class=\"markdownIt-Anchor\" href=\"#location指令说明\">#</a> location 指令说明</h1>\n<p>该指令用于匹配 URL</p>\n<p>语法如下：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528215626081.png\" alt=\"image-20210528215626081\"></p>\n<p>1、 <code>= </code> ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配成功，就停止继续向下搜索并立即处理该请求。</p>\n<p>2、 <code>~</code> ：用于表示 uri 包含正则表达式，并且区分大小写。</p>\n<p>3、 <code>~*</code> ：用于表示 uri 包含正则表达式，并且不区分大小写。</p>\n<p>4、 <code>^~</code> ：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。</p>\n<p><mark>注意：如果 uri 包含正则表达式，则必须要有～或者～* 标识。</mark></p>\n<h1 id=\"nginx配置实例-负载均衡\"><a class=\"markdownIt-Anchor\" href=\"#nginx配置实例-负载均衡\">#</a> nginx 配置实例 - 负载均衡</h1>\n<h2 id=\"1-实现效果-3\"><a class=\"markdownIt-Anchor\" href=\"#1-实现效果-3\">#</a> 1、实现效果</h2>\n<p>（1）浏览器地址栏输入地址 http://192.168.17.129/edu/a.html，负载均衡效果，平均 8080 和 8081 端口中</p>\n<h2 id=\"2-准备工作-3\"><a class=\"markdownIt-Anchor\" href=\"#2-准备工作-3\">#</a> 2、准备工作</h2>\n<p>（1）准备两台 tomcat 服务器，一台 8080，一台 8081</p>\n<p>（2）在两台 tomcat 里面 webapps 目录中，创建名称是 edu 文件夹，在 edu 文件夹中创建页面 a.html，用于测试</p>\n<h2 id=\"3-在nginx-的配置文件中进行负载均衡的配置\"><a class=\"markdownIt-Anchor\" href=\"#3-在nginx-的配置文件中进行负载均衡的配置\">#</a> 3、在 nginx 的配置文件中进行负载均衡的配置</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528221342515.png\" alt=\"image-20210528221342515\"></p>\n<h2 id=\"4-配置成功\"><a class=\"markdownIt-Anchor\" href=\"#4-配置成功\">#</a> 4、配置成功</h2>\n<p>测试，请求同一个路径，轮流地访问 8080，8081 两个服务器，即实现了负载均衡的效果</p>\n<h2 id=\"5-nginx负载均衡的策略\"><a class=\"markdownIt-Anchor\" href=\"#5-nginx负载均衡的策略\">#</a> 5、nginx 负载均衡的策略</h2>\n<h3 id=\"1-轮询默认\"><a class=\"markdownIt-Anchor\" href=\"#1-轮询默认\">#</a> 1、轮询（默认）</h3>\n<p>每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除</p>\n<h3 id=\"2-weight\"><a class=\"markdownIt-Anchor\" href=\"#2-weight\">#</a> 2、weight</h3>\n<p>weight 代表权重，默认为 1，权重越高，被分配的客户端越多</p>\n<p>指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upstream server_pool<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>server <span class=\"token number\">192.168</span>.5.21 <span class=\"token assign-left variable\">weight</span><span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server <span class=\"token number\">192.168</span>.5.22 <span class=\"token assign-left variable\">weight</span><span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"3-ip_hash\"><a class=\"markdownIt-Anchor\" href=\"#3-ip_hash\">#</a> 3、ip_hash</h3>\n<p>每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。例如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upstream server_pool<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ip_hash<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server <span class=\"token number\">192.168</span>.5.21:80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>server <span class=\"token number\">192.168</span>.5.22:80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"4-fair第三方\"><a class=\"markdownIt-Anchor\" href=\"#4-fair第三方\">#</a> 4、fair（第三方）</h3>\n<p>按后端服务器的响应时间来分配请求，响应时间短的优先分配。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>upstream server_pool<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>server <span class=\"token number\">192.168</span>.5.21:80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server <span class=\"token number\">192.168</span>.5.22:80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fair<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"nginx配置实例-动静分离\"><a class=\"markdownIt-Anchor\" href=\"#nginx配置实例-动静分离\">#</a> nginx 配置实例 - 动静分离</h1>\n<h2 id=\"1-什么是动静分离\"><a class=\"markdownIt-Anchor\" href=\"#1-什么是动静分离\">#</a> 1、什么是动静分离</h2>\n<p>Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分开，可以理解成使用 Nginx 处理静态页面，Tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种：</p>\n<ul>\n<li>\n<p>一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案；</p>\n</li>\n<li>\n<p>另外一种方法就是动态跟静态文件混合在一起发布，通过 nginx 来分开。</p>\n</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528223635697.png\" alt=\"image-20210528223635697\"></p>\n<p>通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以设置浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 Expires 定义：是给一个资源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可，所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件，不建议使用 Expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个 URL，发送一个请求，比对服务器该文件最后更新时间，没有变化，则不会从服务器抓取，返回状态码 304，如果有修改，则直接从服务器重新下载，返回状态码 200。</p>\n<h2 id=\"2-准备工作-4\"><a class=\"markdownIt-Anchor\" href=\"#2-准备工作-4\">#</a> 2、准备工作</h2>\n<p>（1）在 linux 系统中准备静态资源，用于进行访问</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528225532427.png\" alt=\"image-20210528225532427\"></p>\n<h2 id=\"3-具体配置-2\"><a class=\"markdownIt-Anchor\" href=\"#3-具体配置-2\">#</a> 3、具体配置</h2>\n<p>（1）在 nginx 配置文件中进行配置</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528225736743.png\" alt=\"image-20210528225736743\"></p>\n<h2 id=\"4-最终测试-2\"><a class=\"markdownIt-Anchor\" href=\"#4-最终测试-2\">#</a> 4、最终测试</h2>\n<p>（1）浏览器输入地址：<span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNDIvaW1hZ2UvMS5wbmc=\">http://10.102.126.42/image/1.png</span></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528225829853.png\" alt=\"image-20210528225829853\"></p>\n<p>直接输入地址 http://10.102.126.42/image/，可以将静态资源全部加载出来，== 注意最后一个 <code>/</code> ，就是 image 后面的 <code>/</code>  不能少，不然会出现 404</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529170620289.png\" alt=\"image-20210529170620289\"></p>\n<p>（2）浏览器输入：<span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNDIvd3d3L2EuaHRtbA==\">http://10.102.126.42/www/a.html</span></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210528230839058.png\" alt=\"image-20210528230839058\"></p>\n<h1 id=\"nginx配置高可用集群\"><a class=\"markdownIt-Anchor\" href=\"#nginx配置高可用集群\">#</a> nginx 配置高可用集群</h1>\n<h2 id=\"1-什么是nginx高可用\"><a class=\"markdownIt-Anchor\" href=\"#1-什么是nginx高可用\">#</a> 1、什么是 nginx 高可用</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529195702822.png\" alt=\"image-20210529195702822\"></p>\n<p>（1）需要两台 nginx 服务器</p>\n<p>（2）需要 keepalived</p>\n<p>（3）需要虚拟 ip 地址</p>\n<h2 id=\"2-配置高可用的准备工作\"><a class=\"markdownIt-Anchor\" href=\"#2-配置高可用的准备工作\">#</a> 2、配置高可用的准备工作</h2>\n<p>（1）需要配置两台服务器 <span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNDIv\">http://10.102.126.42/</span> 和 <span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi42OC43Ni8=\">http://10.102.68.76/</span></p>\n<p>（2）在两台服务器安装 nginx</p>\n<p>（3）在两台服务器安装 keepalived</p>\n<h2 id=\"3-在两台服务器安装keepalived\"><a class=\"markdownIt-Anchor\" href=\"#3-在两台服务器安装keepalived\">#</a> 3、在两台服务器安装 keepalived</h2>\n<p>（1）使用 yum 命令进行安装</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> keepalived -y</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">rpm</span> -q -a keepalived\t<span class=\"token comment\"># 查看 keepalived 是否安装</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529203452428.png\" alt=\"image-20210529203452428\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529203544568.png\" alt=\"image-20210529203544568\"></p>\n<p><mark>在这步操作中可能会出现一下问题</mark></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Error downloading packages:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  keepalived-1.3.5-19.el7.x86_64: <span class=\"token punctuation\">[</span>Errno <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> No <span class=\"token function\">more</span> mirrors to try.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token number\">1</span>:net-snmp-libs-5.7.2-49.el7_9.1.x86_64: <span class=\"token punctuation\">[</span>Errno <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> No <span class=\"token function\">more</span> mirrors to try.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">1</span>:net-snmp-agent-libs-5.7.2-49.el7_9.1.x86_64: <span class=\"token punctuation\">[</span>Errno <span class=\"token number\">256</span><span class=\"token punctuation\">]</span> No <span class=\"token function\">more</span> mirrors to try.</pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529203728931.png\" alt=\"image-20210529203728931\"></p>\n<p>出现这种情况百度的话是这种办法</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529204055515.png\" alt=\"image-20210529204055515\"></p>\n<p><mark>但我觉得首先应该检查自己的虚拟机是否是联网状态，即 ping 百度看能不能 ping 通，如果虚拟机没有联网是没办法通过 yum 命令安装的</mark></p>\n<p>我就是通过虚拟机联网解决了</p>\n<p>（2）安装之后，在 etc 里面生成目录 keepalived，有文件  <code>keepalived.conf</code></p>\n<h2 id=\"4-完成高可用配置主从配置\"><a class=\"markdownIt-Anchor\" href=\"#4-完成高可用配置主从配置\">#</a> 4、完成高可用配置（主从配置）</h2>\n<p>（1）修改 <code>/etc/keepalived/keepalived.conf</code>  配置文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>global_defs <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\tnotification_email <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\tacassen@firewall.loc</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\tfailover@firewall.loc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\tsysadmin@firewall.loc</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tnotification_email_from Alexandre.Cassen@firewall.loc</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tsmtp_server <span class=\"token number\">10.102</span>.126.42</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tsmtp_connect_timeout <span class=\"token number\">30</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\trouter_id LVS_DEVEL <span class=\"token comment\"># 访问到主机，这是主机的名字，和 localhost 差不多的意思</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>vrrp_script chk_http_port <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tscript <span class=\"token string\">\"/usr/local/src/nginx_check.sh\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\tinterval <span class=\"token number\">2</span> <span class=\"token comment\">#（检测脚本执行的间隔）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\tweight <span class=\"token number\">2</span> <span class=\"token comment\"># 权重</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>vrrp_instance VI_1 <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\tstate BACKUP <span class=\"token comment\"># 备份服务器上将 MASTER 改为 BACKUP</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tinterface ens32 //网卡</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tvirtual_router_id <span class=\"token number\">51</span> <span class=\"token comment\"># 主、备机的 virtual_router_id 必须相同</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\tpriority <span class=\"token number\">90</span> <span class=\"token comment\"># 主、备机取不同的优先级，主机值较大，备份机值较小</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tadvert_int <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\tauthentication <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tauth_type PASS</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\tauth_pass <span class=\"token number\">1111</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\tvirtual_ipaddress <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token number\">10.102</span>.126.50 <span class=\"token comment\"># VRRP H 虚拟地址</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（2）在 <code>/usr/local/src</code>  添加检测脚本</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token assign-left variable\">A</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ps</span> -C nginx –-no-header <span class=\"token operator\">|</span><span class=\"token function\">wc</span> -l<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$A</span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t/usr/local/nginx/sbin/nginx</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">sleep</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ps</span> -C nginx --no-header <span class=\"token operator\">|</span><span class=\"token function\">wc</span> -l<span class=\"token variable\">`</span></span> -eq <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token function\">killall</span> keepalived</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p><mark>注意这里两台服务器都要配置</mark></p>\n<p>（3）把两台服务器上 nginx 和 keepalived 启动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 启动 nginx</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./nginx</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 启动 keepalived</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>systemctl start keepalived.service</pre></td></tr></table></figure><h2 id=\"5-最终测试-2\"><a class=\"markdownIt-Anchor\" href=\"#5-最终测试-2\">#</a> 5、最终测试</h2>\n<p>（1）在浏览器地址栏输入 虚拟 ip 地址 <span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNTAv\">http://10.102.126.50/</span></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529220108249.png\" alt=\"image-20210529220108249\"></p>\n<p>可以看到服务器已经绑定了虚拟 ip</p>\n<p>（2）把主服务器（10.102.126.50）nginx 和 keepalived 停止，再输入 <span class=\"exturl\" data-url=\"aHR0cDovLzEwLjEwMi4xMjYuNTAv\">http://10.102.126.50/</span></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529223105940.png\" alt=\"image-20210529223105940\"></p>\n<p><mark>依旧能进行访问</mark>，说明此时集群搭建成功</p>\n<p>可以看到备份服务器也绑定了虚拟 ip</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529223435351.png\" alt=\"image-20210529223435351\"></p>\n<h1 id=\"nginx的原理\"><a class=\"markdownIt-Anchor\" href=\"#nginx的原理\">#</a> nginx 的原理</h1>\n<h2 id=\"1-master-和-worker\"><a class=\"markdownIt-Anchor\" href=\"#1-master-和-worker\">#</a> 1、master 和 worker</h2>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529225621258.png\" alt=\"image-20210529225621258\"></p>\n<h2 id=\"2-worker-如何进行工作的\"><a class=\"markdownIt-Anchor\" href=\"#2-worker-如何进行工作的\">#</a> 2、worker 如何进行工作的</h2>\n<p>每一个 worker 都会争抢请求，争抢到请求则执行。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/nginx/image-20210529225650761.png\" alt=\"image-20210529225650761\"></p>\n<h2 id=\"3-一个master和多个worker有什么好处\"><a class=\"markdownIt-Anchor\" href=\"#3-一个master和多个worker有什么好处\">#</a> 3、一个 master 和多个 worker 有什么好处</h2>\n<p>（1）可以使用 nginx –s reload 热部署，利用 nginx 进行热部署操作</p>\n<p>例如，当其中一个 worker 在执行请求的时候，其他的三个 worker 进行更新，然后可以继续争抢请求，此时还有一个 worker 没有更新热部署，当执行完任务就会进行热部署更新。</p>\n<p>（2）每个 woker 是独立的进程，如果有其中的一个 woker 出现问题，其他 woker 独立的，继续进行争抢，实现请求过程，不会造成服务中断</p>\n<h2 id=\"4-设置多少个worker合适\"><a class=\"markdownIt-Anchor\" href=\"#4-设置多少个worker合适\">#</a> 4、设置多少个 worker 合适</h2>\n<p>worker 数和服务器的 cpu 数相等是最为适宜的</p>\n<h2 id=\"5-连接数-worker_connection\"><a class=\"markdownIt-Anchor\" href=\"#5-连接数-worker_connection\">#</a> 5、连接数 worker_connection</h2>\n<p><mark>第一个：发送请求，占用了 worker 的几个连接数？</mark></p>\n<p>答案：2 个或者是 4 个，因为当客户端通过 nginx 请求静态资源的时候，此时 nginx 连接请求，并返回数据，此时连接数为 2 个。当客户端通过 nginx 请求后端，例如访问数据库的时候就需要连接 tomcat，此时还要返回数据，就有 4 个连接数。</p>\n<p><mark>第二个：nginx 有一个 master，有四个 worker，每个 worker 支持最大的连接数 1024. 那么支持的最大并发数是多少？</mark></p>\n<p><code>普通的静态访问最大并发数是：worker_connections \\* worker_processes /2</code></p>\n<p><code>而如果是 HTTP 作 为反向代理来说，最大并发数量应该是 worker_connections \\* worker_processes/4。</code></p>\n",
            "tags": [
                "Nginx"
            ]
        },
        {
            "id": "http://example.com/Linux/",
            "url": "http://example.com/Linux/",
            "title": "Linux初步学习",
            "date_published": "2021-05-13T08:30:03.000Z",
            "content_html": "<span id=\"more\"></span>\n<h1 id=\"linux学习日志\"><a class=\"markdownIt-Anchor\" href=\"#linux学习日志\">#</a> Linux 学习日志</h1>\n<h2 id=\"学习相关资料和技术文档\"><a class=\"markdownIt-Anchor\" href=\"#学习相关资料和技术文档\">#</a> 学习相关资料和技术文档</h2>\n<p>csdn 博主笔记：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N1MjIzMTU5NTc0Mi9hcnRpY2xlL2xpc3QvMQ==\">https://blog.csdn.net/su2231595742/article/list/1</span></p>\n<p>linux 狂神说学习笔记：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N1MjIzMTU5NTc0Mi9hcnRpY2xlL2RldGFpbHMvMTEyNDcyNzk2\">https://blog.csdn.net/su2231595742/article/details/112472796</span></p>\n<p>linux 安装在 VMwear 教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JhYnl4dWUvYXJ0aWNsZS9kZXRhaWxzLzgwOTcwNTI2\">https://blog.csdn.net/babyxue/article/details/80970526</span></p>\n<h2 id=\"1入门概述\"><a class=\"markdownIt-Anchor\" href=\"#1入门概述\">#</a> 1. 入门概述</h2>\n<h3 id=\"11-我们为什么要学习linux\"><a class=\"markdownIt-Anchor\" href=\"#11-我们为什么要学习linux\">#</a> 1.1、我们为什么要学习 Linux</h3>\n<p>linux 诞生了这么多年，以前还喊着如何能取代 windows 系统，现在这个口号已经小多了，任何事物发展都有其局限性都有其天花板。就如同在国内再搞一个社交软件取代腾讯一样，想想而已基本不可能，因为用户已经习惯于使用微信交流，不是说技术上实现不了解而是老百姓已经习惯了，想让他们不用，即使他们自己不用亲戚朋友还是要用，没有办法的事情。</p>\n<p>用习惯了 windows 操作系统，再让大家切换到别的操作系统基本上是不可能的事情，改变一个人已经养成的习惯太难。没有办法深入到普通老百姓的生活中，并不意味着 linux 就没有用武之地了。在服务器端，在开发领域 linux 倒是越来越受欢迎，很多程序员都觉得不懂点 linux 都觉得不好意思，linux 在开源社区的地位依然岿然不动。</p>\n<p>尤其是作为一个后端程序员，是必须要掌握 Linux 的，因为这都成为了你找工作的基础门槛了，所以不得不学习！</p>\n<h3 id=\"12-linux-简介\"><a class=\"markdownIt-Anchor\" href=\"#12-linux-简介\">#</a> 1.2、Linux 简介</h3>\n<p>Linux 内核最初只是由芬兰人林纳斯・托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。</p>\n<p>Linux 是一套免费使用和自由传播的类 Unix 操作系统，是一个基于 POSIX（可移植操作系统接口） 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。</p>\n<p>Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p>\n<h3 id=\"13-linux-发行版\"><a class=\"markdownIt-Anchor\" href=\"#13-linux-发行版\">#</a> 1.3、Linux 发行版</h3>\n<p>Linux 的发行版说简单点就是将 Linux 内核与应用软件做一个打包。</p>\n<p>Kali linux：安全渗透测试使用！（有兴趣做安全的同学可以了解一下！）</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/2020122020104278-1620716275522-1620716316198.png\" alt=\"linux图片\"></p>\n<p>目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20201220201119647.png\" alt=\"linux图片\"></p>\n<h3 id=\"14-linux-应用领域\"><a class=\"markdownIt-Anchor\" href=\"#14-linux-应用领域\">#</a> 1.4、Linux 应用领域</h3>\n<p>今天各种场合都有使用各种 Linux 发行版，从嵌入式设备到超级计算机，并且在服务器领域确定了地位，通常服务器使用 LAMP（Linux + Apache + MySQL + PHP）或 LNMP（Linux + Nginx+ MySQL +PHP）组合。</p>\n<p>目前 Linux 不仅在家庭与企业中使用，并且在政府中也很受欢迎。</p>\n<ul>\n<li>巴西联邦政府由于支持 Linux 而世界闻名。</li>\n<li>有新闻报道俄罗斯军队自己制造的 Linux 发布版的，做为 G.H.ost 项目已经取得成果。</li>\n<li>印度的 Kerala 联邦计划在向全联邦的高中推广使用 Linux。</li>\n<li>中华人民共和国为取得技术独立，在龙芯处理器中排他性地使用 Linux。</li>\n<li>在西班牙的一些地区开发了自己的 Linux 发布版，并且在政府与教育领域广泛使用，如 Extremadura 地区的 gnuLinEx 和 Andalusia 地区的 Guadalinex。</li>\n<li>葡萄牙同样使用自己的 Linux 发布版 Caixa Mágica，用于 Magalh?es 笔记本电脑和 e-escola 政府软件。</li>\n<li>法国和德国同样开始逐步采用 Linux。</li>\n</ul>\n<p>只要学不死，就往死里学</p>\n<h3 id=\"15-linux-vs-windows\"><a class=\"markdownIt-Anchor\" href=\"#15-linux-vs-windows\">#</a> 1.5、Linux vs Windows</h3>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20201220202154232.png\" alt=\"linux图片\"></p>\n<h2 id=\"2-环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#2-环境搭建\">#</a> 2、环境搭建</h2>\n<p>Linux 的安装，安装步骤比较繁琐（操作系统本身也是一个软件），现在其实云服务器挺普遍的，价格也便宜，如果直接不想搭建，也可以直接买一台学习用用！</p>\n<h3 id=\"21-安装centos-在本地安装这个不太建议如果没有经济来源的话可以考虑在本地搭建\"><a class=\"markdownIt-Anchor\" href=\"#21-安装centos-在本地安装这个不太建议如果没有经济来源的话可以考虑在本地搭建\">#</a> 2.1、安装 CentOS （在本地安装，这个不太建议，如果没有经济来源的话，可以考虑在本地搭建）</h3>\n<p>Linux 是一个操作系统，你也可以把自己电脑安装成双系统！</p>\n<p>虚拟机（VMware 下载（收费的，注册码！）</p>\n<p>下载链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudm13YXJlLmNvbS9jbi9wcm9kdWN0cy93b3Jrc3RhdGlvbi1wcm8vd29ya3N0YXRpb24tcHJvLWV2YWx1YXRpb24uaHRtbA==\">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</span></p>\n<p>官网下载：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20201222145631600.png\" alt=\"linux图片\"></p>\n<p>安装完成后打开软件有如下界面：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511152938944.png\" alt=\"image-20210511152938944\"></p>\n<p>在虚拟机上安装 CentOS7</p>\n<p>1、可以通过镜像进行安装！ 下载地址：<span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS9jZW50b3MvNy9pc29zL3g4Nl82NC8lRUYlQkMlOEMlRTQlQjglOEIlRTglQkQlQkQlRTUlQUUlOEMlRTYlODglOTAlRTUlOTAlOEUlRTUlQUUlODklRTglQTMlODUlRTUlOEQlQjMlRTUlOEYlQUYlRUYlQkMlODElRTUlQUUlODklRTglQTMlODUlRTYlOTMlOEQlRTQlQkQlOUMlRTclQjMlQkIlRTclQkIlOUYlRTUlOTIlOEMlRTUlQUUlODklRTglQTMlODUlRTglQkQlQUYlRTQlQkIlQjYlRTYlOTglQUYlRTQlQjglODAlRTYlQTAlQjclRTclOUElODQlRUYlQkMlOEMlRTYlQjMlQTglRTYlODQlOEYlRUYlQkMlOUFMaW51eCVFNyVBMyU4MSVFNyU5QiU5OCVFNSU4OCU4NiVFNSU4QyVCQSVFNyU5QSU4NCVFNiU5NyVCNiVFNSU4MCU5OSVFOSU5QyU4MCVFOCVBNiU4MSVFNiVCMyVBOCVFNiU4NCU4RiVFNSU4OCU4NiVFNSU4QyVCQSVFNSU5MCU4RCVFNSU4RCVCMyVFNSU4RiVBRiVFRiVCQyU4MS9ib290\">http://mirrors.aliyun.com/centos/7/isos/x86_64/，下载完成后安装即可！安装操作系统和安装软件是一样的，注意：Linux 磁盘分区的时候需要注意分区名即可！/boot</span> /home!</p>\n<p>2、下载 CentOS 镜像</p>\n<p>CentOS 镜像：<span class=\"exturl\" data-url=\"aHR0cDovL21pcnJvcnMuYWxpeXVuLmNvbS9jZW50b3MvNy9pc29zL3g4Nl82NC8=\">http://mirrors.aliyun.com/centos/7/isos/x86_64/</span></p>\n<p>安装教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzE0NjAzL2FydGljbGUvZGV0YWlscy84ODgyOTQyMw==\">https://blog.csdn.net/qq_44714603/article/details/88829423</span></p>\n<p>3、安装 VMware 虚拟机软件，然后打开我们的镜像即可使用！</p>\n<p>打开后的样子：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511165844058.png\" alt=\"image-20210511165844058\"></p>\n<p>VMware 的使用方式：</p>\n<p>点击屏幕进入虚拟机、Ctrl + Alt 将聚焦退出虚拟机！</p>\n<p>开机后的页面：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511165753148.png\" alt=\"image-20210511165753148\"></p>\n<p>大家下载完毕后，可以安装系统，然后根据我们的账号密码，来自己测试登录！</p>\n<p>那我们的本地 Linux 环境就准备好了！</p>\n<h3 id=\"22-购买云服务器有经济来源的话可以购买阿里云服务器因为这才是最近接公司中原生环境的\"><a class=\"markdownIt-Anchor\" href=\"#22-购买云服务器有经济来源的话可以购买阿里云服务器因为这才是最近接公司中原生环境的\">#</a> 2.2、购买云服务器（有经济来源的话，可以购买阿里云服务器，因为这才是最近接公司中原生环境的！）</h3>\n<p>云服务器就是一个远程电脑，服务器一般不会关机！</p>\n<p>虚拟机安装后占用空间，也会有些卡顿，我们作为程序员其实可以选择购买一台自己的服务器，这样的话更加接近真实线上工作；</p>\n<p>1、阿里云购买服务器：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzc1MjI0Mz9zcG09YTJjNmguMTM4MTMwMTcuMC5kQXJ0aWNsZTczODYzOC41YWI0MWQzY0JybGFGeg==\">https://developer.aliyun.com/article/752243?spm=a2c6h.13813017.0.dArticle738638.5ab41d3cBrlaFz</span><br>\n2、购买完毕后，获取服务器的 ip 地址，重置服务器密码，就可以远程登录了</p>\n<p>获取公网 IP 地址！<br>\n修改自己的登录密码</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511172159160.png\" alt=\"image-20210511172159160\"></p>\n<p>3、下载 xShell 远程连接工具 22，进行远程连接使用！建议使用 360 一键下载！还需要下载一个 xFtp 文件上传 21！</p>\n<p>下载完毕后，直接打开即可！<br>\n4、使用 Xshell 连接远程服务器！~</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511172321130.png\" alt=\"image-20210511172321130\"></p>\n<p>登录用户名和密码之后，登录成功就是如下界面：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511172336530.png\" alt=\"image-20210511172336530\"></p>\n<p>这里就是我们的 Linux 操作系统了！以后的操作都在这里操作，项目也在这里进行发布！</p>\n<p>Ctrl + 鼠标滚轮，放大和缩小字体！<br>\n上传文件使用 xftp 即可！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511172401519.png\" alt=\"image-20210511172401519\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511172544737.png\" alt=\"image-20210511172544737\"></p>\n<p>Tomcat 需要 Java 环境！我们后会按照 JDK，到时候再测试吧，先学基本的 Linux 命令为主！<br>\n远程环境安装！</p>\n<p>注意事项：</p>\n<p>如果要打开端口，需要在阿里云的安全组面板中开启对应的出入规则，不然的话会被阿里拦截！</p>\n<p>如果前期不好操作，可以推荐安装宝塔面板，傻瓜式管理服务器</p>\n<p>安装教程：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYnQuY24vYmJzL3RocmVhZC0xOTM3Ni0xLTEuaHRtbA==\">https://www.bt.cn/bbs/thread-19376-1-1.html</span></p>\n<p>1、开启对应的端口<br>\n 2、一键安装<br>\n 3、安装完毕后会得到远程面板的地址，账号，密码，就可以登录了<br>\n 4、登录之后就可以可视化的安装环境和部署网站！</p>\n<p><strong>关于域名</strong></p>\n<p>如果自己的网站想要上线，就一定要购买一个域名然后进行备案；</p>\n<p>备案的话需要一些认证和时间，备完完毕后，就可以解析到自己的网站了，这个时候就可以使用域名来进行服务器的访问</p>\n<h2 id=\"3-走近linux系统\"><a class=\"markdownIt-Anchor\" href=\"#3-走近linux系统\">#</a> 3、走近 Linux 系统</h2>\n<h3 id=\"31-开机登录\"><a class=\"markdownIt-Anchor\" href=\"#31-开机登录\">#</a> 3.1、开机登录</h3>\n<p>开机会启动许多程序。它们在 Windows 叫做 &quot;服务&quot;（service），在 Linux 就叫做 &quot;守护进程&quot;（daemon）。</p>\n<p>开机成功后，它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给 login 程序来验证用户的身份，密码是不显示的，输完回车即可！</p>\n<p>一般来说，用户的登录方式有三种：</p>\n<p>命令行登录<br>\n ssh 登录<br>\n图形界面登录<br>\n最高权限账户为 root，可以操作一切！</p>\n<h3 id=\"32-关机\"><a class=\"markdownIt-Anchor\" href=\"#32-关机\">#</a> 3.2、关机</h3>\n<p>在 linux 领域内大多用在服务器上，很少遇到关机的操作。毕竟服务器上跑一个服务是永无止境的，除非特殊情况下，不得已才会关机。</p>\n<p>关机指令为：shutdown ；</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/2021011521440482.png\" alt=\"linux图片\"></p>\n<pre><code>sync # 将数据由内存同步到硬盘中。\nshutdown # 关机指令，你可以man shutdown 来看一下帮助文档。例如你可以运行如下命令关机：\nshutdown –h 10 # 这个命令告诉大家，计算机将在10分钟后关机\nshutdown –h now # 立马关机\nshutdown –h 20:25 # 系统会在今天20:25关机\nshutdown –h +10 # 十分钟后关机\nshutdown –r now # 系统立马重启\nshutdown –r +10 # 系统十分钟后重启\nreboot # 就是重启，等同于 shutdown –r now\nhalt # 关闭系统，等同于shutdown –h now 和 poweroff\n</code></pre>\n<p>最后总结一下，不管是重启系统还是关闭系统，首先要运行 sync 命令，把内存中的数据写到磁盘中。</p>\n<h3 id=\"33-系统目录结构\"><a class=\"markdownIt-Anchor\" href=\"#33-系统目录结构\">#</a> 3.3、系统目录结构</h3>\n<p>1、一切皆文件<br>\n 2、根目录 / ，所有的文件都挂载在这个节点下</p>\n<p>登录系统后，在当前命令窗口下输入命令：</p>\n<pre><code>ls /\n</code></pre>\n<p>你会看到如下图所示：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511182042029.png\" alt=\"image-20210511182042029\"></p>\n<p>树状目录结构：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20210115214450337.png\" alt=\"linux图片\"></p>\n<p>以下是对这些目录的解释：</p>\n<ul>\n<li><strong>/bin：</strong> bin 是 Binary 的缩写，这个目录存 放着最经常使用的命令。</li>\n<li><strong>/boot：</strong> 这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。（不要动）</li>\n<li><strong>/dev ：</strong> dev 是 Device (设备) 的缩写，存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</li>\n<li><mark><strong>/etc：</strong> 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</mark></li>\n<li><mark>**/home：** 用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</mark></li>\n<li><strong>/lib：</strong> 这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。（不要动）</li>\n<li><strong>/lost+found：</strong> 这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。（存放突然关机的一些文件）</li>\n<li>**/media：**linux 系统会自动识别一些设备，例如 U 盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下。</li>\n<li>**/mnt：** 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在 /mnt/ 上，然后进入该目录就可以查看光驱里的内容了。（我们后面会把一些本地文件挂载在这个目录下）</li>\n<li><mark>**/opt：** 这是给主机额外安装软件所摆放的目录。比如你安装一个 ORACLE 数据库则就可以放到这个目录下。默认是空的。</mark></li>\n<li><strong>/proc：</strong> 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。（不用管）</li>\n<li><mark>**/root：** 该目录为系统管理员，也称作超级权限者的用户主目录。</mark></li>\n<li>**/sbin：**s 就是 Super User 的意思，这里存放的是系统管理员使用的系统管理程序。</li>\n<li>/srv：该目录存放一些服务启动之后需要提取的数据。/sys：这是 linux2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统 sysfs 。</li>\n<li><mark>**/tmp：** 这个目录是用来存放一些临时文件的。用完即丢的文件，可以放在这个目录下，安装包！</mark></li>\n<li><mark>**/usr：<strong>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</strong></mark></li>\n<li><strong>/usr/bin：</strong> 系统用户使用的应用程序。</li>\n<li><strong>/usr/sbin：</strong> 超级用户使用的比较高级的管理程序和系统守护程序。Super</li>\n<li><strong>/usr/src：</strong> 内核源代码默认的放置目录。</li>\n<li><mark>**/var：** 这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</mark></li>\n<li>**/run：** 是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。</li>\n<li><mark>**/www：** 存放服务器网站相关的资源，环境，网站的项目</mark></li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20210115214514601.png\" alt=\"linux图片\"></p>\n<h2 id=\"4-常用基本命令\"><a class=\"markdownIt-Anchor\" href=\"#4-常用基本命令\">#</a> 4、常用基本命令</h2>\n<h3 id=\"41-目录管理\"><a class=\"markdownIt-Anchor\" href=\"#41-目录管理\">#</a> 4.1、目录管理</h3>\n<h4 id=\"411-绝对路径-相对路径\"><a class=\"markdownIt-Anchor\" href=\"#411-绝对路径-相对路径\">#</a> 4.1.1、绝对路径、相对路径</h4>\n<p>绝对路径路径的全称：C:\\ProgramData\\360safe\\xxx.xx</p>\n<p>比如说 360safe 目录下，那这个 xxx.xx 文件，对应我们的相对配置就 /xxx.xx</p>\n<p>cd ： 切换目录命令！<br>\n./ ： 当前目录<br>\n cd … ： 返回上一级目录（cd 英文句号打两个）</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511183802095.png\" alt=\"image-20210511183802095\"></p>\n<h4 id=\"412-ls-列出目录\"><a class=\"markdownIt-Anchor\" href=\"#412-ls-列出目录\">#</a> 4.1.2、ls （列出目录！）</h4>\n<p>在 Linux 中 ls 可能是最常常被使用的！</p>\n<p>-a 参数：all ，查看全部的文件，包括隐藏文件<br>\n - l 参数 列出所有的文件，包含文件的属性和权限，没有隐藏文件<br>\n所有 Linux 可以组合使用！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511204512682.png\" alt=\"image-20210511204512682\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511204524263.png\" alt=\"image-20210511204524263\"></p>\n<h4 id=\"413-cd-命令-切换目录\"><a class=\"markdownIt-Anchor\" href=\"#413-cd-命令-切换目录\">#</a> 4.1.3、cd 命令 切换目录</h4>\n<p>cd 目录名（绝对路径都是以 / 开头，相对路径，对于当前目录该如何寻找 …/…/）</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511205045064.png\" alt=\"image-20210511205045064\"></p>\n<p>大家只要多尝试使用，就会了！</p>\n<blockquote>\n<p>pwd 显示当前用户所在的目录</p>\n</blockquote>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511205352362.png\" alt=\"image-20210511205352362\"></p>\n<h4 id=\"414-mkdir-创建目录\"><a class=\"markdownIt-Anchor\" href=\"#414-mkdir-创建目录\">#</a> 4.1.4、mkdir 创建目录</h4>\n<p>mkdir xxx ： 创建目录<br>\n mkdir -p test2/test3/test4： 创建多级目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir test1 # 创建目录</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>admin  lloam  lloamstudy  test1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd test1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ test1<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd ..</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir test2/test3/test4 #创建多级目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mkdir: cannot create directory ‘test2/test3/test4’: No such <span class=\"token function\">file</span> or directory</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># mkdir -p test2/test3/test4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>admin  lloam  lloamstudy  test1  test2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd test2</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ test2<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>test3</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ test2<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd test3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ test3<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>test4</pre></td></tr></table></figure><h4 id=\"415-rmdir-删除目录\"><a class=\"markdownIt-Anchor\" href=\"#415-rmdir-删除目录\">#</a> 4.1.5、rmdir 删除目录</h4>\n<p>rmdir xxx ： 删除不为空的目录<br>\n rmdir -p test2/test3/test4 ：强制删除目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ test3<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd /home</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>admin  lloam  lloamstudy  test1  test2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># rmdir test1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>admin  lloam  lloamstudy  test2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># rmdir test2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>rmdir: failed to remove ‘test2’: Directory not empty</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># rmdir -p test2/test3/test4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>admin  lloam  lloamstudy</pre></td></tr></table></figure><p>rmdir 仅能删除空的目录，如果下面存在文件，需要先删除文件，递归删除多个目录 -p 参数即可</p>\n<h4 id=\"416-cp-复制文件目录\"><a class=\"markdownIt-Anchor\" href=\"#416-cp-复制文件目录\">#</a> 4.1.6、cp 复制文件目录</h4>\n<p>cp 原来的地方 新的地方<br>\n如果文件重复，就选择覆盖（y）或者 放弃（n）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>admin  lloam  lloamstudy  PAD.png</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># clear</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>admin  lloam  lloamstudy  PAD.png</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp PAD.png lloamstudy # 拷贝文件至目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>admin  lloam  lloamstudy  PAD.png</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd lloamstudy</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>PAD.png</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd ..</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cp PAD.png lloamstudy # 如果文件重复，就选择覆盖（y）或者放弃（n）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cp: overwrite ‘lloamstudy/PAD.png’? y</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><h4 id=\"417-rm-移除文件目录\"><a class=\"markdownIt-Anchor\" href=\"#417-rm-移除文件目录\">#</a> 4.1.7、rm 移除文件目录</h4>\n<p>-f 忽略不存在的文件，不会出现警告，强制删除！<br>\n-r 递归删除目录！<br>\n-i 互动，删除询问是否删除</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">rm</span> -rf / <span class=\"token comment\"># 系统中所有的文件就被删除了，删库跑路就是这么操作的！</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>PAD.png</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># rm -rf PAD.png </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr></table></figure><h4 id=\"418-mv-移动文件或者目录\"><a class=\"markdownIt-Anchor\" href=\"#418-mv-移动文件或者目录\">#</a> 4.1.8、mv 移动文件或者目录</h4>\n<p>还可以重命名文件夹</p>\n<p>-f 强制<br>\n - u 只替换已经更新过的文件<br>\n mv <span class=\"exturl\" data-url=\"aHR0cDovL2luc3RhbGwuc2g=\">install.sh</span> kuangstudy    移动文件<br>\n mv kuangstudy kuangstudy2   重命名文件夹</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>admin  lloam  lloamstudy  PAD.png</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># mv PAD.png lloamstudy # 移动文件</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>admin  lloam  lloamstudy</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd lloamstudy</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>PAD.png</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ lloamstudy<span class=\"token punctuation\">]</span><span class=\"token comment\"># cd ..</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>admin  lloam  lloamstudy</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># mv lloamstudy lloamstudy2 # 重命名文件夹</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>admin  lloam  lloamstudy2</pre></td></tr></table></figure><h3 id=\"42-基本属性\"><a class=\"markdownIt-Anchor\" href=\"#42-基本属性\">#</a> 4.2、基本属性</h3>\n<p>十个字母 ；1 类型</p>\n<h4 id=\"421-看懂文件属性\"><a class=\"markdownIt-Anchor\" href=\"#421-看懂文件属性\">#</a> 4.2.1、看懂文件属性</h4>\n<p>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p>\n<p>在 Linux 中我们可以使用  <code>ll </code> 或者 <code>ls –l</code>  命令来显示一个文件的属性以及文件所属的用户和组，如：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511211750553.png\" alt=\"image-20210511211750553\"></p>\n<p>实例中，root 文件的第一个属性用 &quot;d&quot; 表示。&quot;d&quot; 在 Linux 中代表该文件是一个目录文件。</p>\n<p>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等：</p>\n<ul>\n<li>\n<p><mark>当为 [d] 则是目录</mark></p>\n</li>\n<li>\n<p><mark>当为 [-] 则是文件；</mark></p>\n</li>\n<li>\n<p><mark>若是 [l] 则表示为链接文档 ( link file )；</mark></p>\n</li>\n<li>\n<p>若是 [b] 则表示为装置文件里面的可供储存的接口设备 ( 可随机存取装置 )；</p>\n</li>\n<li>\n<p>若是 [c] 则表示为装置文件里面的串行端口设备，例如键盘、鼠标 ( 一次性读取装置 )。</p>\n<p>接下来的字符中，以三个为一组，且均为『rwx』 的三个参数的组合。</p>\n</li>\n</ul>\n<p>其中，[r] 代表可读 (read)、[ w ] 代表可写 (write)、[ x ] 代表可执行 (execute)。</p>\n<p>要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 [-] 而已。</p>\n<p>每个文件的属性由左边第一部分的 10 个字符来确定（如下图）：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20210115223324226.png\" alt=\"linux图片\"></p>\n<p>从左至右用 0-9 这些数字来表示。</p>\n<p>第 0 位确定文件类型，第 1-3 位确定属主（该文件的所有者）拥有该文件的权限。第 4-6 位确定属组（所有者的同组用户）拥有该文件的权限，第 7-9 位确定其他用户拥有该文件的权限。</p>\n<p>其中：</p>\n<p>第 1、4、7 位表示读权限，如果用 &quot;r&quot; 字符表示，则有读权限，如果用 &quot;-“字符表示，则没有读权限；<br>\n第 2、5、8 位表示写权限，如果用 &quot;w&quot; 字符表示，则有写权限，如果用”-“字符表示没有写权限；<br>\n第 3、6、9 位表示可执行权限，如果用 &quot;x&quot; 字符表示，则有执行权限，如果用”-&quot; 字符表示，则没有执行权<br>\n限。<br>\n对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。</p>\n<p>同时，在 Linux 系统中，用户是按组分类的，一个用户属于一个或多个组。</p>\n<p>文件所有者以外的用户又可以分为文件所有者的同组用户和其他用户。</p>\n<p>因此，Linux 系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。</p>\n<p>在以上实例中，test 文件是一个目录文件，属主和属组都为 root。</p>\n<h4 id=\"422-修改文件属性\"><a class=\"markdownIt-Anchor\" href=\"#422-修改文件属性\">#</a> 4.2.2、修改文件属性</h4>\n<p><strong>1、chgrp：更改文件属组</strong></p>\n<pre><code>chgrp [-R] 属组名 文件名\n</code></pre>\n<p>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上 - R 的参数，那么该目录下的所有文件的属组都会更改。</p>\n<p>2、chown：更改文件属主，也可以同时更改文件属组</p>\n<pre><code>chown [–R] 属主名 文件名\nchown [-R] 属主名：属组名 文件名\n</code></pre>\n<p>3、chmod：更改文件 9 个属性（必须要掌握）</p>\n<p>你没有权限操作此文件！</p>\n<pre><code>chmod [-R] xyz 文件或目录\n</code></pre>\n<p>Linux 文件属性有两种设置方法，一种是数字（常用的是数字），一种是符号。</p>\n<p>Linux 文件的基本权限就有九个，分别是 owner/group/others 三种身份各有自己的 read/write/execute 权限。</p>\n<p>先复习一下刚刚上面提到的数据：文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p>\n<pre><code>r:4    w:2    x:1\n\n可读可写不可执行 rw-   6\n可读可写不课执行 rwx   7\n\nchomd  777  文件赋予所有用户可读可写可执行！\n</code></pre>\n<p>每种身份 (owner/group/others) 各自的三个权限 (r/w/x) 分数是需要累加的，例如当权限为：[-rwxrwx—] 分数则是：</p>\n<p>owner = rwx = 4+2+1 = 7<br>\ngroup = rwx = 4+2+1 = 7<br>\nothers= — = 0+0+0 = 0</p>\n<pre><code>chmod 770 filename\n</code></pre>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511213406298.png\" alt=\"image-20210511213406298\"></p>\n<h4 id=\"423-文件内容查看\"><a class=\"markdownIt-Anchor\" href=\"#423-文件内容查看\">#</a> 4.2.3、文件内容查看</h4>\n<p>我们会经常使用到文件查看！</p>\n<p>Linux 系统中使用以下命令来查看文件的内容：</p>\n<ul>\n<li>\n<p>cat 由第一行开始显示文件内容，用来读文章，或者读取配置文件啊，都使用 cat 命令</p>\n</li>\n<li>\n<p>tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</p>\n</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511214200930.png\" alt=\"image-20210511214200930\"></p>\n<ul>\n<li>nl 显示的时候，顺道输出行号！ 看代码的时候，希望显示行号！ 常用</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511214354825.png\" alt=\"image-20210511214354825\"></p>\n<ul>\n<li>\n<p>more 一页一页的显示文件内容，带余下内容的（空格代表翻页，enter 代表向下看一行， :f 行号）</p>\n</li>\n<li>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511214600741.png\" alt=\"image-20210511214600741\"></p>\n</li>\n<li>\n<p>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！ （空格下翻页，pageDown，pageUp 键代表翻动页面！退出 q 命令，查找字符串 ：/ 要查询的字符向下查询，向上查询使用：？要查询的字符串，nN 继续搜寻下一个，n 向上寻找！）</p>\n</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511215159933.png\" alt=\"image-20210511215159933\"></p>\n<ul>\n<li>head 只看头几行 通过 -n 参数来控制显示几行！</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511214941992.png\" alt=\"image-20210511214941992\"></p>\n<ul>\n<li>tail 只看尾巴几行 -n 参数 要查看几行！</li>\n</ul>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511215023267.png\" alt=\"image-20210511215023267\"></p>\n<p>你可以使用 man [命令] 来查看各个命令的使用文档，如 ：man cp。</p>\n<p>网络配置目录：cd /etc/sysconfig/network-scripts</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511213842724.png\" alt=\"image-20210511213842724\"></p>\n<p>ifconfig 命令查看网络配置！</p>\n<h4 id=\"424-linux-链接\"><a class=\"markdownIt-Anchor\" href=\"#424-linux-链接\">#</a> 4.2.4、Linux 链接</h4>\n<p><strong>拓展：Linux 链接的概念（了解即可！）</strong></p>\n<p>Linux 的链接分为两种：硬链接、软链接！</p>\n<p>** 硬链接：**A—B，假设 B 是 A 的硬链接，那么他们两个指向了同一个文件！允许一个文件拥有多个路径，用户可以通过这种机制建立硬链接到一些重要文件上，防止误删！</p>\n<p><strong>软链接</strong>： 类似 Window 下的快捷方式，删除的源文件，快捷方式也访问不了！</p>\n<p><code>创建连接 ln 命令！</code></p>\n<p><code>touch</code>  命令创建文件！</p>\n<p><code>echo</code>  输入字符串，也可以输入到文件中！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># touch f1 # 创建一个 f1 文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>admin  f1  lloam  lloamstudy2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln f1 f2 # 创建一个硬链接 f2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>admin  f1  f2  lloam  lloamstudy2</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ln -s f1 f3 # 创建一个软连接 f3</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>admin  f1  f2  f3  lloam  lloamstudy2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>total <span class=\"token number\">12</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>drwx------ <span class=\"token number\">3</span> admin admin <span class=\"token number\">4096</span> May <span class=\"token number\">11</span> <span class=\"token number\">16</span>:06 admin</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>-rw-r--r-- <span class=\"token number\">2</span> root  root     <span class=\"token number\">0</span> May <span class=\"token number\">11</span> <span class=\"token number\">22</span>:01 f1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>-rw-r--r-- <span class=\"token number\">2</span> root  root     <span class=\"token number\">0</span> May <span class=\"token number\">11</span> <span class=\"token number\">22</span>:01 f2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>lrwxrwxrwx <span class=\"token number\">1</span> root  root     <span class=\"token number\">2</span> May <span class=\"token number\">11</span> <span class=\"token number\">22</span>:02 f3 -<span class=\"token operator\">></span> f1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> root  root  <span class=\"token number\">4096</span> May <span class=\"token number\">11</span> <span class=\"token number\">18</span>:26 lloam</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> root  root  <span class=\"token number\">4096</span> May <span class=\"token number\">11</span> <span class=\"token number\">21</span>:11 lloamstudy2</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># echo \"i lova mao\" >>f1 #给 f1 文件中写入一些字符串</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>admin  f1  f2  f3  lloam  lloamstudy2</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># clear</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ll</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>total <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>drwx------ <span class=\"token number\">3</span> admin admin <span class=\"token number\">4096</span> May <span class=\"token number\">11</span> <span class=\"token number\">16</span>:06 admin</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>-rw-r--r-- <span class=\"token number\">2</span> root  root    <span class=\"token number\">11</span> May <span class=\"token number\">11</span> <span class=\"token number\">22</span>:03 f1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>-rw-r--r-- <span class=\"token number\">2</span> root  root    <span class=\"token number\">11</span> May <span class=\"token number\">11</span> <span class=\"token number\">22</span>:03 f2</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>lrwxrwxrwx <span class=\"token number\">1</span> root  root     <span class=\"token number\">2</span> May <span class=\"token number\">11</span> <span class=\"token number\">22</span>:02 f3 -<span class=\"token operator\">></span> f1</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> root  root  <span class=\"token number\">4096</span> May <span class=\"token number\">11</span> <span class=\"token number\">18</span>:26 lloam</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>drwxr-xr-x <span class=\"token number\">2</span> root  root  <span class=\"token number\">4096</span> May <span class=\"token number\">11</span> <span class=\"token number\">21</span>:11 lloamstudy2</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat f1 # 查看 f1</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>i lova mao</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat f2 # 查看 f2</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>i lova mao</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat f3 # 查看 f3</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>i lova mao</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>删除 f1 之后，查看 f2 和 f3 的区别</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># rm -rf f1 # 删除 f1 文件</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>admin  f2  f3  lloam  lloamstudy2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat f2 # f2 硬链接还在</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>i lova mao</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat f3 # f3 （软链接、符号链接）快捷方式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cat: f3: No such <span class=\"token function\">file</span> or directory</pre></td></tr></table></figure><h3 id=\"43-vim-编辑器\"><a class=\"markdownIt-Anchor\" href=\"#43-vim-编辑器\">#</a> 4.3、Vim 编辑器</h3>\n<h4 id=\"431-什么是vim编辑器\"><a class=\"markdownIt-Anchor\" href=\"#431-什么是vim编辑器\">#</a> 4.3.1、什么是 Vim 编辑器</h4>\n<p>vim 通过一些插件可以实现和 IDE 一样的功能！</p>\n<p>Vim 是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。尤其是 Linux 中，必须要会使用 Vim（查看内容，编辑内容，保存内容！）</p>\n<p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。</p>\n<p>vim 则可以说是程序开发者的一项很好用的工具。</p>\n<p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p>\n<p>连 vim 的官方网站 (<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy52aW0ub3Jn\">http://www.vim.org</span>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p>\n<p>vim 键盘图：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20210116092222874.png\" alt=\"linux图片\"></p>\n<h4 id=\"432-三种使用模式\"><a class=\"markdownIt-Anchor\" href=\"#432-三种使用模式\">#</a> 4.3.2、三种使用模式</h4>\n<p>基本上 vi/vim 共分为三种模式，分别是命令模式（Command mode），输入模式（Insert mode）和底线命令模式（Last line mode）。这三种模式的作用分别是：</p>\n<p><strong>命令模式：</strong></p>\n<p>用户刚刚启动 vi/vim，便进入了命令模式。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511222634174.png\" alt=\"image-20210511222634174\"></p>\n<p>此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符。比如我们此时按下 i，并不会输入一个字符，i 被当作了一个命令。</p>\n<p>以下是常用的几个命令：</p>\n<ul>\n<li>i 切换到输入模式，以输入字符。</li>\n<li>x 删除当前光标所在处的字符。</li>\n<li>: 切换到底线命令模式，以在最底一行输入命令。 如果是编辑模式，需要先退出编辑模式！ESC<br>\n 若想要编辑文本：启动 Vim，进入了命令模式，按下 i，切换到输入模式。</li>\n</ul>\n<p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p>\n<p>** 输入模式：** 在命令模式下按下 i 就进入了输入模式。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511221521627.png\" alt=\"image-20210511221521627\"></p>\n<p>在输入模式中，可以使用以下按键：</p>\n<p>字符按键以及 Shift 组合，输入字符<br>\n ENTER，回车键，换行<br>\n BACK SPACE，退格键，删除光标前一个字符<br>\n DEL，删除键，删除光标后一个字符<br>\n方向键，在文本中移动光标<br>\n HOME/END，移动光标到行首 / 行尾<br>\n Page Up/Page Down，上 / 下翻页<br>\n Insert，切换光标为输入 / 替换模式，光标将变成竖线 / 下划线<br>\n ESC，退出输入模式，切换到命令模式<br>\n底线命令模式：在命令模式下按下:（英文冒号）就进入了底线命令模式。光标就移动到了最底下，就可以在这里输入一<br>\n些底线命令了！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20210116092848193.png\" alt=\"linux图片\"></p>\n<p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p>\n<p>在底线命令模式中，基本的命令有（已经省略了冒号）：wq</p>\n<p>q 退出程序<br>\n w 保存文件</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/20210116092910342.png\" alt=\"linux图片\"></p>\n<p>按 ESC 键可随时退出底线命令模式。</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/image-20210511222258700.png\" alt=\"image-20210511222258700\"></p>\n<p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/linux/919f634aa944b04c0f7929b2ce475715.png\" alt=\"img\"></p>\n<h4 id=\"433-完整的演示说明\"><a class=\"markdownIt-Anchor\" href=\"#433-完整的演示说明\">#</a> 4.3.3、完整的演示说明</h4>\n<p>新建或者编辑文件，按  <code>i </code> 进入编辑模式，编写内容，编写完成后退出编辑模式， <code>esc</code> ，退出之后进入底线命令模式  <code>：</code>   <code>wq </code> 保存退出！</p>\n<h4 id=\"434-vim-按键说明\"><a class=\"markdownIt-Anchor\" href=\"#434-vim-按键说明\">#</a> 4.3.4、Vim 按键说明</h4>\n<p>除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。</p>\n<p><strong>第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">按键</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">h 或向左方向键 (←)</td>\n<td style=\"text-align:center\">游标向左移动一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">j 或向下方向键 (↓)</td>\n<td style=\"text-align:center\">游标向下移动一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">k 或向上方向键 (↑)</td>\n<td style=\"text-align:center\">游标向上移动一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">l 或向右方向键 (→)</td>\n<td style=\"text-align:center\">游标向右移动一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>[ctrl]+[f]</mark></td>\n<td style=\"text-align:center\">屏幕向下移动一页，相当于 [Page Down]<strong>（常用）</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>[ctrl]+[b]</mark></td>\n<td style=\"text-align:center\">屏幕向上移动一页，相当于 [Page Up]<strong>（常用）</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ctrl]+[d]</td>\n<td style=\"text-align:center\">屏幕向下移动半页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[ctrl]+[u]</td>\n<td style=\"text-align:center\">屏幕向上移动半页</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数字 +[Space]</td>\n<td style=\"text-align:center\">n 表示数字，按下数字后再按空格键，游标会向右移动到这一行的第 n 个字元。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">功能键 [Home] 或 0</td>\n<td style=\"text-align:center\">游标移动到这一行的第一个字元处</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>功能键 [End] 或 $</mark></td>\n<td style=\"text-align:center\">游标移动到这一行的最后一个字元处 <strong>（常用）</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">H</td>\n<td style=\"text-align:center\">游标移动到这个屏幕最上方那一行的第一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">M</td>\n<td style=\"text-align:center\">游标移动到这个屏幕中央那一行的第一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">L</td>\n<td style=\"text-align:center\">游标移动到这个屏幕最下方那一行的第一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>G</mark></td>\n<td style=\"text-align:center\">游标移动到这个档案的最后一行 <strong>（常用）</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">nG</td>\n<td style=\"text-align:center\">n 为数字。游标移动到这个档案的第 n 行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>gg</mark></td>\n<td style=\"text-align:center\">游标移动到这个档案的第一行 <strong>（常用）</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>数字 +[Enter]</mark></td>\n<td style=\"text-align:center\">n 为数字。游标向下移动 n 行 <strong>（常用）</strong></td>\n</tr>\n</tbody>\n</table>\n<p><code>替换搜索\t</code></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">替换搜索</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/word</td>\n<td style=\"text-align:center\">向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?word</td>\n<td style=\"text-align:center\">向光标之上寻找一个字符串名称为 word 的字符串。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n</td>\n<td style=\"text-align:center\">这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行？vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:center\">按键</td>\n<td style=\"text-align:center\">说明</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:------------:</td>\n<td style=\"text-align:center\">:----------------------------------------------------------:</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>[Del] 或 x</mark></td>\n<td style=\"text-align:center\">向后删除一个字元 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>X</mark></td>\n<td style=\"text-align:center\">向前删除一个字元 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">nx</td>\n<td style=\"text-align:center\">n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>dd</mark></td>\n<td style=\"text-align:center\">删除游标所在的那一行 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>ndd</mark></td>\n<td style=\"text-align:center\">n 为数字，删除游标所在的那一行往下数 的 n 个行，例如 20dd 则是删除 20 行 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d1G</td>\n<td style=\"text-align:center\">删除游标所在的那行到第一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">dG</td>\n<td style=\"text-align:center\">删除游标所在的那行到最后一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d$</td>\n<td style=\"text-align:center\">删除游标所在处到该行的最后一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d0</td>\n<td style=\"text-align:center\">是数字 0，删除游标所在处到该行的第一个字元</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>yy</mark></td>\n<td style=\"text-align:center\">复制游标所在的那一行 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>nyy</mark></td>\n<td style=\"text-align:center\">n 为数字， 复制游标所在的那一行往下数 n 行 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">y1G</td>\n<td style=\"text-align:center\">复制游标所在行到第一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">yG</td>\n<td style=\"text-align:center\">复制游标所在行到最后一行的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">y0</td>\n<td style=\"text-align:center\">复制游标所在的字元到该行行首的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">y$</td>\n<td style=\"text-align:center\">复制游标所在的字元到该行行尾的所有数据</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>p</mark></td>\n<td style=\"text-align:center\">将已复制的数据粘贴在游标所在的那一行的下一行 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>P</mark></td>\n<td style=\"text-align:center\">将已复制的数据粘贴在游标所在的那一行的上一行，原来游标所在的那一行会被推后一行 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">J</td>\n<td style=\"text-align:center\">将游标所在的行与下一行的数据合并为一行</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>u</mark></td>\n<td style=\"text-align:center\">复原前一个动作 **（常用）**</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>[ctrl]+r</mark></td>\n<td style=\"text-align:center\">重做上一个被撤销的操作 （常用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><mark>.</mark></td>\n<td style=\"text-align:center\">这是小数点，表示重复前一个操作 （常用）</td>\n</tr>\n</tbody>\n</table>\n<p><strong>第二部分：一般模式切换到编辑模式的可用的按钮说明</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">进入输入或取代的编辑模式</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">i, I</td>\n<td style=\"text-align:center\">进入输入模式 (Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a, A</td>\n<td style=\"text-align:center\">进入输入模式 (Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』，A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">o, O</td>\n<td style=\"text-align:center\">进入输入模式 (Insert mode)：这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』；O 为在目前光标所在处的上一行输入新的一行！(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">r, R</td>\n<td style=\"text-align:center\">进入取代模式 (Replace mode)：r 只会取代光标所在的那一个字符一次；R 会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[Esc]</td>\n<td style=\"text-align:center\">退出编辑模式，回到一般模式中 **(常用)**</td>\n</tr>\n</tbody>\n</table>\n<p><strong>第三部分：一般模式切换到指令行模式的可用的按钮说明</strong></p>\n<table>\n<thead>\n<tr>\n<th>按键</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><mark>:w</mark></td>\n<td>将编辑的文件写入硬盘 （常用）</td>\n</tr>\n<tr>\n<td>:w!</td>\n<td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td>\n</tr>\n<tr>\n<td><mark>:q</mark></td>\n<td>离开 vi （常用）</td>\n</tr>\n<tr>\n<td>:q!</td>\n<td>若曾修改过档案，又不想储存，使用！为强制离开不储存档案。注意一下，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思</td>\n</tr>\n<tr>\n<td><mark>:wq</mark></td>\n<td>文件写入硬盘后（即保存）离开 vi （常用）</td>\n</tr>\n<tr>\n<td>:wq!</td>\n<td>文件强制写入硬盘后（即保存）离开 vi</td>\n</tr>\n<tr>\n<td>ZZ</td>\n<td>大写字母 Z，如果文件没有修改，则直接离开；如果文件被修改，则保存后离开</td>\n</tr>\n<tr>\n<td>:w [filename]</td>\n<td>将当前文件另存为另一个文件，这个新文件的保存路径为当前路径</td>\n</tr>\n<tr>\n<td>:r [filename]</td>\n<td>在当前文件中读入另一个文件的数据，插入到当前游标所在列的后面</td>\n</tr>\n<tr>\n<td>:n1,n2 w [filename]</td>\n<td>将第 n1 行到第 n2 行的数据储存为新的文件</td>\n</tr>\n<tr>\n<td>:! command</td>\n<td>暂时离开 vi 到指令列模式下执行 command 的显示结果。例如『:! ls /home』即可在 vi 当中看 /home 底下以 ls 输出的档案信息！</td>\n</tr>\n<tr>\n<td><mark>:set nu</mark></td>\n<td>设置行号，代码中经常会使用！\t显示行号，设定之后，会在每一行的前缀显示该行的行号<br/>:set nonu\t与 set nu 相反，为取消行号！</td>\n</tr>\n</tbody>\n</table>\n<p>以上标注的掌握熟练即可，其与的了解或者自己测一测即可，我们平时使用 VIM 最多的就是修改下文件内容而已！</p>\n<h3 id=\"44-账号管理\"><a class=\"markdownIt-Anchor\" href=\"#44-账号管理\">#</a> 4.4、账号管理</h3>\n<p>你一般在公司中，用的应该都不是 root 账户！</p>\n<h4 id=\"441-简介\"><a class=\"markdownIt-Anchor\" href=\"#441-简介\">#</a> 4.4.1、简介</h4>\n<p>Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p>\n<p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p>\n<p>每个用户账号都拥有一个唯一的用户名和各自的口令。</p>\n<p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。</p>\n<p>实现用户账号的管理，要完成的工作主要有如下几个方面：</p>\n<ul>\n<li>用户账号的添加、删除与修改。</li>\n<li>用户口令的管理。</li>\n<li>用户组的管理。</li>\n</ul>\n<h4 id=\"442-用户账号的管理\"><a class=\"markdownIt-Anchor\" href=\"#442-用户账号的管理\">#</a> 4.4.2、用户账号的管理</h4>\n<p>用户账号的管理工作主要涉及到用户账号的添加、修改和删除。</p>\n<p>添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录 Shell 等资源。</p>\n<p>属主，属组</p>\n<h4 id=\"443-添加用户useradd\"><a class=\"markdownIt-Anchor\" href=\"#443-添加用户useradd\">#</a> 4.4.3、添加用户 useradd</h4>\n<p>useradd - 选项 用户名</p>\n<p>-m： 自动创建这个用户的主目录 /home/qinjiang</p>\n<p>-G : 给用户分配组！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>admin  lloam  lloamstudy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># useradd -m mao # 创建一个用户！</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># ls</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>admin  lloam  lloamstudy2  mao</pre></td></tr></table></figure><p>理解一下本质：Linux 中一切皆文件，这里的添加用户说白了就是往某一个文件中写入用户的信息了！</p>\n<p>/etc/passwd</p>\n<h4 id=\"444-删除用户-userdel\"><a class=\"markdownIt-Anchor\" href=\"#444-删除用户-userdel\">#</a> 4.4.4、删除用户 userdel</h4>\n<p>userdel -r qinjiang 删除用户的时候将他的目录页一并删掉！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ /<span class=\"token punctuation\">]</span><span class=\"token comment\"># userdel -r mao # 删除用户</span></pre></td></tr></table></figure><h4 id=\"445-修改用户-usermod\"><a class=\"markdownIt-Anchor\" href=\"#445-修改用户-usermod\">#</a> 4.4.5、修改用户 usermod</h4>\n<p>修改用户 usermod 对应修改的内容 修改那个用户</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@iZ2ze2gq6oy52j4ctfd39hZ home<span class=\"token punctuation\">]</span><span class=\"token comment\"># usermod -d /home/233 mao</span></pre></td></tr></table></figure><p>修改完毕之后查看配置文件即可！</p>\n<h4 id=\"446-切换用户\"><a class=\"markdownIt-Anchor\" href=\"#446-切换用户\">#</a> 4.4.6、切换用户</h4>\n<p>root 用户</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512202914464.png\" alt=\"image-20210512202914464\"></p>\n<p>1. 切换用户的命令为：su username 【username 是你的用户名】</p>\n<p>2. 从普通用户切换到 root 用户，还可以使用命令：sudo su</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512203429156.png\" alt=\"image-20210512203429156\"></p>\n<p>3. 在终端输入 exit 或 logout 或使用快捷方式 ctrl+d，可以退回到原来用户，其实 ctrl+d 也是执行的 exit 命令</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512203524441.png\" alt=\"image-20210512203524441\"></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@lloam home<span class=\"token punctuation\">]</span><span class=\"token comment\"># su mao</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>mao@lloam home<span class=\"token punctuation\">]</span>$ <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@lloam home<span class=\"token punctuation\">]</span><span class=\"token comment\">#</span></pre></td></tr></table></figure><p>4. 在切换用户时，如果想在切换用户之后使用新用户的工作环境，可以在 su 和 username 之间加 - ，例如：【su - root】</p>\n<p>$ 表示普通用户<br>\n #表示超级用户，也就是 root 用户<br>\n有的小伙伴在阿里云买完服务器后，主机名是一个随机字符串！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512204127550.png\" alt=\"image-20210512204127550\"></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">hostname</span> mao <span class=\"token comment\"># 修改主机名</span></pre></td></tr></table></figure><h4 id=\"447-用户的密码设置\"><a class=\"markdownIt-Anchor\" href=\"#447-用户的密码设置\">#</a> 4.4.7、用户的密码设置</h4>\n<p>我们一般通过 root 创建用户的时候！要配置密码！</p>\n<p>Linux 上输入密码是不会显示的，你正常输入就可以了，并不是系统的问题！</p>\n<p>在公司中，你们一般拿不到公司服务器的 root 权限，都是一些分配的账号！</p>\n<p>如果是超级用户的话：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">passwd</span> username：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>new password：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>re password：</pre></td></tr></table></figure><p>如果是普通用户：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span> UNIX password:   <span class=\"token comment\"># 输当前用用户密码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>new password： <span class=\"token comment\"># 密码不能太过于简单！</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>re password：</pre></td></tr></table></figure><h4 id=\"448-锁定账户\"><a class=\"markdownIt-Anchor\" href=\"#448-锁定账户\">#</a> 4.4.8、锁定账户</h4>\n<p>root，比如张三辞职了！冻结这个账号，一旦冻结，这个人就登录不上系统了！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">passwd</span> -l mao <span class=\"token comment\"># 锁定之后这个用户就不能登录了！</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">passwd</span> -d mao <span class=\"token comment\"># 没有密码也不能登录！</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">passwd</span> -u mao <span class=\"token comment\"># 解锁用户</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512205338774.png\" alt=\"image-20210512205338774\"></p>\n<p>在公司中，你一般触及不到 root 用户！作为一个开发一般你拿不到！</p>\n<p>这以上的基本命令，大家必须要掌握！但是自己玩的时候可以使用来学习！Linux 是一个多用户的系统！</p>\n<h3 id=\"45-用户组管理\"><a class=\"markdownIt-Anchor\" href=\"#45-用户组管理\">#</a> 4.5、用户组管理</h3>\n<p>属主、属组</p>\n<p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理（开发、测试、运维、root）。不同 Linux 系统对用户组的规定有所不同，如 Linux 下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。</p>\n<p>用户组的管理涉及用户组的添加、删除和修改。<mark><strong>组的增加、删除和修改实际上就是对 /etc/group 文件的更新。</strong></mark></p>\n<h4 id=\"451-创建一个用户组\"><a class=\"markdownIt-Anchor\" href=\"#451-创建一个用户组\">#</a> 4.5.1、创建一个用户组</h4>\n<p><strong>groupadd</strong></p>\n<p>创建完用户组后可以得到一个组的 id，这个 id 是可以指定的！ -g 520， 如果不指定就是自增 1</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512205957120.png\" alt=\"image-20210512205957120\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512210110724.png\" alt=\"image-20210512210110724\"></p>\n<h4 id=\"452-删除用户组\"><a class=\"markdownIt-Anchor\" href=\"#452-删除用户组\">#</a> 4.5.2、删除用户组</h4>\n<p><strong>groupdel</strong></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512210139750.png\" alt=\"image-20210512210139750\"></p>\n<h4 id=\"453-修改用户组\"><a class=\"markdownIt-Anchor\" href=\"#453-修改用户组\">#</a> 4.5.3、修改用户组</h4>\n<p><strong>修改用户组的权限信息和名字 groupmod -g -n</strong></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512210418618.png\" alt=\"image-20210512210418618\"></p>\n<h4 id=\"454-切换用户组\"><a class=\"markdownIt-Anchor\" href=\"#454-切换用户组\">#</a> 4.5.4、切换用户组</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 登录当前用户 qinjiang</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ newgrp root</pre></td></tr></table></figure><h3 id=\"455-文件的查看了解即可\"><a class=\"markdownIt-Anchor\" href=\"#455-文件的查看了解即可\">#</a> 4.5.5、文件的查看 (了解即可)</h3>\n<blockquote>\n<p>/etc/passwd</p>\n</blockquote>\n<pre><code>用户名:口令(登录密码，我们不可见):用户标识号:组标识号:注释性描述:主目录:登录Shell\n这个文件中的每一行都代表这一个用户，我们可以从这里看出这个用户的主目录在哪里，可以看到属于哪一个组！\n</code></pre>\n<p>登录口令：把真正的加密后的用户口令字存放到 **/etc/shadow** 文件中，保证我们密码的安全性！</p>\n<p>用户组的所有信息都存放在 **/etc/group** 文件中。</p>\n<h3 id=\"46-磁盘管理\"><a class=\"markdownIt-Anchor\" href=\"#46-磁盘管理\">#</a> 4.6、磁盘管理</h3>\n<h4 id=\"461-磁盘空间使用量\"><a class=\"markdownIt-Anchor\" href=\"#461-磁盘空间使用量\">#</a> 4.6.1、磁盘空间使用量</h4>\n<p>df （列出文件系统整体的磁盘使用量） du（检查磁盘空间使用量！）</p>\n<p>df<br>\ndf -h</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512211651914.png\" alt=\"image-20210512211651914\"></p>\n<p>du<br>\ndu -a 查看隐藏文件</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512211901487.png\" alt=\"image-20210512211901487\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512212043117.png\" alt=\"image-20210512212043117\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512212222431.png\" alt=\"image-20210512212222431\"></p>\n<h4 id=\"462-挂载磁盘或文件\"><a class=\"markdownIt-Anchor\" href=\"#462-挂载磁盘或文件\">#</a> 4.6.2、挂载磁盘或文件</h4>\n<p>Mac 或者想使用 Linux 挂载我们的一些本地磁盘或者文件！</p>\n<p>挂载：mount</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512212628693.png\" alt=\"image-20210512212628693\"></p>\n<p>卸载：umount -f [挂载位置] 强制卸载</p>\n<p>除了这个之外，以后我们安装了 JDK ，其实可以使用 java 中的一些命令来查看信息！</p>\n<h3 id=\"47-进程管理\"><a class=\"markdownIt-Anchor\" href=\"#47-进程管理\">#</a> 4.7、进程管理</h3>\n<p>Linux 中一切皆文件</p>\n<p>（文件：读写执行（查看，创建，删除，移动，复制，编辑），权限（用户、用户组）。系统：（磁盘，进程））</p>\n<p>对于我们开发人员来说，其实 Linux 更多偏向于使用即可！</p>\n<h4 id=\"471-基本概念\"><a class=\"markdownIt-Anchor\" href=\"#471-基本概念\">#</a> 4.7.1、基本概念</h4>\n<p>1、在 Linux 中，每一个程序都是有自己的一个进程，每一个进程都有一个 id 号！<br>\n2、每一个进程呢，都会有一个父进程！<br>\n3、进程可以有两种存在方式：前台！后台运行！<br>\n4、一般的话服务都是后台运行的，基本的程序都是前台运行的！</p>\n<h4 id=\"472-命令\"><a class=\"markdownIt-Anchor\" href=\"#472-命令\">#</a> 4.7.2、命令</h4>\n<p><strong>ps</strong> 查看当前系统中正在执行的各种进程的信息！</p>\n<p>ps -xx ：</p>\n<ul>\n<li>-a 显示当前终端运行的所有的进程信息（当前的进程一个）</li>\n<li>-u 以用户的信息显示进程</li>\n<li>-x 显示后台运行进程的参数！</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> -aux <span class=\"token comment\"># 查看所有的进程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">ps</span> -aux<span class=\"token operator\">|</span><span class=\"token function\">grep</span> mysql</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># | 在 Linux 这个叫做管道符 A|B</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">grep</span> <span class=\"token comment\"># 查找文件中符合条件的字符串！</span></pre></td></tr></table></figure><p>对于我们来说，这里目前只需要记住一个命令即可 ps -xx|grep 进程名字！ 过滤进程信息！</p>\n<p>ps -ef：可以查看到父进程的信息</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ps</span> -ef<span class=\"token operator\">|</span><span class=\"token function\">grep</span> mysql <span class=\"token comment\"># 看父进程我们一般可以通过目录树结构来查看！</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 进程树！</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pstree -pu</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>-p <span class=\"token comment\">#　显示父 id</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>-u <span class=\"token comment\"># 显示用户组</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/20210116144718583.png\" alt=\"linux图片\"></p>\n<p>结束进程：杀掉进程，等价于 window 结束任务！</p>\n<p>kill -9 进程的 id</p>\n<p>但是啊，我们平时写的一个 Java 代码死循环了，可以选择结束进程！杀进程</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">kill</span> -9 <span class=\"token comment\"># 进程的 id</span></pre></td></tr></table></figure><p>表示强制结束该进程！</p>\n<p>将 Java 程序打包发布的时候讲解！  <code>nohup</code>  ，代表后台执行程序</p>\n<h2 id=\"5-环境安装\"><a class=\"markdownIt-Anchor\" href=\"#5-环境安装\">#</a> 5、环境安装</h2>\n<p>安装软件一般有三种方式：</p>\n<ul>\n<li>rpm（Jdk：在线发布一个 SringBoot 项目！）\\</li>\n<li>解压缩（tomcat，启动并通过外网访问，发布网站）</li>\n<li>yum 在线安装（docker：直接安装运行跑起来 docker 就可以！）！</li>\n</ul>\n<h3 id=\"51-jdk安装\"><a class=\"markdownIt-Anchor\" href=\"#51-jdk安装\">#</a> 5.1、JDK 安装</h3>\n<p>我们开发 java 程序必须要的环境！<br>\n1、下载 JDK rpm。去 oralce 官网下载即可！<br>\n2、安装 java 环境</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 检测当前系统是否存在 java 环境！ java -version</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 如果有的话就需要卸载</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># rpm -qa|grep jdk # 检测 JDK 版本信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># rpm -e --nodeps jdk_</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 卸载完毕后即可安装 jdk</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># rpm -ivh rpm 包  安装 jdk</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 配置环境变量！</span></pre></td></tr></table></figure><p>如果存在可以提前卸载：<br>\n<img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512221347331.png\" alt=\"image-20210512221347331\"></p>\n<p>安装：</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210512221048774.png\" alt=\"\"></p>\n<p>配置环境变量： <code> /etc/profile</code>  在文件的最后面增加 java 的配置和 window 安装环境变量一样！</p>\n<p><mark><strong>使用 rpm 安装的 jdk 使不需要配置环境变量的，自动就帮我们配置好了</strong></mark></p>\n<pre><code>JAVA_HOME=/usr/java/jdk1.8.0_221-amd64\nCLASSPATH=%JAVA_HOME%/lib;%JAVA_HOME%/jre/lib\nPATH=$JAVA_HOME/bin;$JAVA_HOME/jre/bin\nexport PATH CLASSPATH JAVA_HOME\n</code></pre>\n<p>让这个配置文件生效！ source /etc/profile 我们来发布一个项目试试！</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 开启防火墙端口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>firewall-cmd --zone<span class=\"token operator\">=</span>public --add-port<span class=\"token operator\">=</span><span class=\"token number\">9000</span>/tcp --permanent</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 重启防火墙</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>systemctl restart firewalld.service</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 查看所有开启的端口，如果是阿里云，需要配置安全组规则！</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>firewall-cmd --list-ports</pre></td></tr></table></figure><h3 id=\"52-tomcat-安装\"><a class=\"markdownIt-Anchor\" href=\"#52-tomcat-安装\">#</a> 5.2、Tomcat 安装</h3>\n<p>ssm war 就需要放到 tomcat 中运行！</p>\n<p>1、下载 tomcat。官网下载即可  <code>apache-tomcat-9.0.45.tar.gz </code></p>\n<p>2、解压这个文件</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> -zxvf apache-tomcat-9.0.22.tar.gz</pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513203918974.png\" alt=\"image-20210513203918974\"></p>\n<p>3、启动 tomcat 测试！ ./xxx.sh 脚本即可运行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 执行 ./startup.sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 停止 ./shotdown.sh</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513204217333.png\" alt=\"image-20210513204217333\"></p>\n<p><mark>如果防火墙 8080 端口开了并且阿里云安全组也开放了这个时候就可以直接访问远程了！</mark></p>\n<p>我买的是轻量级服务器，只需要开启防火墙 8080 端口就可以访问了</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513205513219.png\" alt=\"image-20210513205513219\"></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 查看 firewall 服务状态</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>systemctl status firewalld</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 开启、重启、关闭、firewalld.service 服务</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 开启</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">service</span> firewalld start</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 重启</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">service</span> firewalld restart</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 关闭</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">service</span> firewalld stop</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 查看防火墙规则</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>firewall-cmd --list-all <span class=\"token comment\"># 查看全部信息</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>firewall-cmd --list-ports <span class=\"token comment\"># 只看端口信息</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 开启端口</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>开端口命令：firewall-cmd --zone<span class=\"token operator\">=</span>public --add-port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>/tcp --permanent</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>重启防火墙：systemctl restart firewalld.service</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>命令含义：</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>--zone <span class=\"token comment\">#作用域</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>--add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp <span class=\"token comment\">#添加端口，格式为：端口 / 通讯协议</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>--permanent <span class=\"token comment\">#永久生效，没有此参数重启后失效</span></pre></td></tr></table></figure><p>上传完毕的项目直接购买自己的域名，备案解析过去即可！1 年级都会做！</p>\n<p>域名解析后，如果端口是 80 - http 或者 443-https 可以直接访问，如果是 9000 8080，就需要通过 Apcahe 或者 Nginx 做一下反向代理即可，配置文件即可，十分之简单，大家如果想要上线自己的网站，到目前为止，那么你可以如愿以偿了！</p>\n<h3 id=\"53-dockeryum安装\"><a class=\"markdownIt-Anchor\" href=\"#53-dockeryum安装\">#</a> 5.3、Docker（yum 安装）</h3>\n<p>联网的情况下 yum install -y yum 源</p>\n<p>官网安装参考手册：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmRvY2tlci5jb20vaW5zdGFsbC9saW51eC9kb2NrZXItY2UvY2VudG9zLw==\">https://docs.docker.com/install/linux/docker-ce/centos/</span></p>\n<p>我们现在是在 Linux 下执行，一定要联网 ，yum 在线安装！</p>\n<p>将心比心！为什么要做这些事情的一个思想！</p>\n<blockquote>\n<p>安装</p>\n</blockquote>\n<p>1、检测 CentOS 7</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@mao bin<span class=\"token punctuation\">]</span><span class=\"token comment\"># cat /etc/redhat-release</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CentOS Linux release <span class=\"token number\">7.6</span>.1810 <span class=\"token punctuation\">(</span>Core<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>2、安装我们的准备环境</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum -y <span class=\"token function\">install</span> 包名 <span class=\"token comment\"># yum install 安装命令 -y 所有的提示都为 y</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum -y <span class=\"token function\">install</span> gcc</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>yum -y <span class=\"token function\">install</span> gcc-c++</pre></td></tr></table></figure><p>3、清楚以前的版本！后面根据官网安装即可，我就不在这里写了！</p>\n<h3 id=\"54-宝塔面板懒人式安装\"><a class=\"markdownIt-Anchor\" href=\"#54-宝塔面板懒人式安装\">#</a> 5.4、宝塔面板（懒人式安装）</h3>\n<p>具体的教程 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMTc3NDExSzdiSA==\">https://www.bilibili.com/video/BV177411K7bH</span></p>\n<h2 id=\"6-扩展vmware使用\"><a class=\"markdownIt-Anchor\" href=\"#6-扩展vmware使用\">#</a> 6、扩展：Vmware 使用</h2>\n<p>很多小伙伴，比较吝啬，买不起 70 一年的服务器 ！ Vmware 本地安装包！</p>\n<h3 id=\"61-快照\"><a class=\"markdownIt-Anchor\" href=\"#61-快照\">#</a> 6.1、快照</h3>\n<p>保留当前系统信息为快照，随时可以恢复，以防未来系统被你玩坏，就好比游戏中的归档！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513213152600.png\" alt=\"image-20210513213152600\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/20210116174016866.png\" alt=\"linux图片\"></p>\n<p>平时的话，我们每配置一个东西就可以拍摄一个快照，保留信息！</p>\n<h3 id=\"62-本地网络配置\"><a class=\"markdownIt-Anchor\" href=\"#62-本地网络配置\">#</a> 6.2、本地网络配置</h3>\n<p>大一学的计算机网络原理中有！</p>\n<p>需要保证 Linux 虚拟机和本机处在同一个网段！</p>\n<p>windows</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513213510841.png\" alt=\"image-20210513213510841\"></p>\n<p>Linux 也必须要配置到 对应的网段 10.102.0.110</p>\n<p>/etc/sysconfig/network-scripts/</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513214004656.png\" alt=\"image-20210513214004656\"></p>\n<p>桥接模式 : 192.168.0.110 192.168.0. 160</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/image-20210513214149021.png\" alt=\"image-20210513214149021\"></p>\n<p>一定要桥接到正确的网卡即可！<br>\n静态的话就需要配置 IP 地址，IPADDR=192.168.0.110，以下是静态的网络配置，这两种方式，都可以让虚拟机连接外网从而实现网络开发！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/20210116174200326.png\" alt=\"linux图片\"></p>\n<p>傻瓜式配置，只能在图形界面下有效！</p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/20210116174215692.png\" alt=\"linux图片\"></p>\n<p><img data-src=\"https://gitee.com/lloamhh/spring-img/raw/master/img/mybatis/20210116174222994.png\" alt=\"linux图片\"></p>\n<p>配置完毕即可上网！</p>\n<h2 id=\"操作图文教程\"><a class=\"markdownIt-Anchor\" href=\"#操作图文教程\">#</a> 操作图文教程</h2>\n<p>Ubuntu 系统提示用户不在 sudoers 文件中，此事将被报告。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGludXhydW1lbi5jb20vcm14eC8xODIyLmh0bWw=\">https://www.linuxrumen.com/rmxx/1822.html</span></p>\n<p>linux vim 如何保存退出</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aGlkYW8uYmFpZHUuY29tL3F1ZXN0aW9uLzU4NDMxNjUzNi5odG1s\">https://zhidao.baidu.com/question/584316536.html</span></p>\n<p>管理员和普通用户</p>\n<p>管理员#</p>\n<p>普通用户 $</p>\n<p>命令：su  然后输入密码</p>\n",
            "tags": [
                "linux"
            ]
        }
    ]
}
<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>失心耀的博客 • Posts by &#34;springboot&#34; tag</title>
    <link href="http://example.com" />
    <updated>2021-04-10T00:39:18.000Z</updated>
    <category term="Hexo" />
    <category term="Java" />
    <category term="Springboot" />
    <category term="Git" />
    <category term="Nginx" />
    <category term="linux" />
    <category term="RabbitMQ" />
    <category term="Redis" />
    <entry>
        <id>http://example.com/Springboot%E7%BB%83%E4%B9%A0/</id>
        <title>Springboot 后端练习任务</title>
        <link rel="alternate" href="http://example.com/Springboot%E7%BB%83%E4%B9%A0/"/>
        <content type="html">&lt;h2 id=&#34;后端练习任务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后端练习任务&#34;&gt;#&lt;/a&gt; 后端练习任务&lt;/h2&gt;
&lt;h3 id=&#34;day01&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day01&#34;&gt;#&lt;/a&gt; day01：&lt;/h3&gt;
&lt;h4 id=&#34;1创建springboot工程熟悉每个目录结构的作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1创建springboot工程熟悉每个目录结构的作用&#34;&gt;#&lt;/a&gt; 1. 创建 Springboot 工程，熟悉每个目录结构的作用&lt;/h4&gt;
&lt;h4 id=&#34;2熟悉配置文件能自定义属性并在代码中使用的地方绑定到指定的属性上&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2熟悉配置文件能自定义属性并在代码中使用的地方绑定到指定的属性上&#34;&gt;#&lt;/a&gt; 2. 熟悉配置文件，能自定义属性，并在代码中使用的地方，绑定到指定的属性上&lt;/h4&gt;
&lt;h4 id=&#34;3创建restful-api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3创建restful-api&#34;&gt;#&lt;/a&gt; 3. 创建 Restful API&lt;/h4&gt;
&lt;h4 id=&#34;4使用jpa访问mariadb实现增删查改并进行单元测试&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4使用jpa访问mariadb实现增删查改并进行单元测试&#34;&gt;#&lt;/a&gt; 4. 使用 JPA 访问 Mariadb，实现增删查改，并进行单元测试&lt;/h4&gt;
&lt;h4 id=&#34;5熟悉git命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5熟悉git命令&#34;&gt;#&lt;/a&gt; 5. 熟悉 Git 命令&lt;/h4&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day02&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day02&#34;&gt;#&lt;/a&gt; day02：&lt;/h3&gt;
&lt;h4 id=&#34;1读取applicationproperties中的自定义属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1读取applicationproperties中的自定义属性&#34;&gt;#&lt;/a&gt; 1. 读取 application.properties 中的自定义属性。&lt;/h4&gt;
&lt;p&gt;在 &lt;code&gt;application.properties&lt;/code&gt;  定义两个属性 &lt;code&gt;wx.appid=123456&lt;/code&gt;  和 &lt;code&gt;wx.secret=9999&lt;/code&gt; ，&lt;/p&gt;
&lt;p&gt;新建 WxController 控制器，在控制器中读取上面定义的两个自定义属性。&lt;/p&gt;
&lt;h4 id=&#34;2自定义配置文件读取自定义配置文件中的属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2自定义配置文件读取自定义配置文件中的属性&#34;&gt;#&lt;/a&gt; 2. 自定义配置文件，读取自定义配置文件中的属性。&lt;/h4&gt;
&lt;p&gt;新建 &lt;code&gt;datasource.properties&lt;/code&gt;  文件，在该配置文件中定义以下几个属性，在 WxController 控制器中读取该配置文件中的属性.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;note: 该方式不止一种，选择最优雅的一种。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;geek.datasource.url=jdbc:mysql://localhost:3306/geek
geek.datasource.username=geek
geek.datasource.password=123456
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;3jpa基于方法名称命名规则查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3jpa基于方法名称命名规则查询&#34;&gt;#&lt;/a&gt; 3.JPA 基于方法名称命名规则查询&lt;/h4&gt;
&lt;p&gt;新建 &lt;code&gt;Student&lt;/code&gt;  实体。实体属性根据需求自己定义。&lt;/p&gt;
&lt;p&gt;1. 根据学生的 &lt;code&gt;年龄&lt;/code&gt; 查询&lt;/p&gt;
&lt;p&gt;2. 根据学生的 &lt;code&gt;名称``模糊&lt;/code&gt; 查询&lt;/p&gt;
&lt;p&gt;3. 查询 &lt;code&gt;所有&lt;/code&gt; 学生，按照 &lt;code&gt;年龄&lt;/code&gt; 降序&lt;/p&gt;
&lt;p&gt;4. 统计 &lt;code&gt;所有&lt;/code&gt; 学生的人数&lt;/p&gt;
&lt;h4 id=&#34;4jpa自定义sql查询使用query注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4jpa自定义sql查询使用query注解&#34;&gt;#&lt;/a&gt; 4.JPA 自定义 SQL 查询，使用 @Query 注解。&lt;/h4&gt;
&lt;p&gt;1. 根据学生的 &lt;code&gt;班级&lt;/code&gt; 查询，并按照年龄降序&lt;/p&gt;
&lt;p&gt;2. 根据学生的 &lt;code&gt;年龄&lt;/code&gt; 进行 &lt;code&gt;范围&lt;/code&gt; 查询&lt;/p&gt;
&lt;h4 id=&#34;5jpa分页查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5jpa分页查询&#34;&gt;#&lt;/a&gt; 5.JPA 分页查询&lt;/h4&gt;
&lt;p&gt;1. 根据学生的 &lt;code&gt;年龄&lt;/code&gt; 进行查询，并进行分页。&lt;/p&gt;
&lt;h4 id=&#34;6复杂查询&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6复杂查询&#34;&gt;#&lt;/a&gt; 6. 复杂查询&lt;/h4&gt;
&lt;p&gt;1. 根据学生 &lt;code&gt;年龄&lt;/code&gt; 比较查询和 &lt;code&gt;名称&lt;/code&gt; 、 &lt;code&gt;班级&lt;/code&gt; 的模糊查询，并进行分页。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【注意】年龄为一个变量，名称和班级为一个变量，总共两个变量&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;7跟app组对接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7跟app组对接&#34;&gt;#&lt;/a&gt; 7. 跟 app 组对接&lt;/h4&gt;
&lt;div style=&#34;color:red&#34;&gt;每个后端成员找一个APP成员，组成搭档后，进行需求的分析，为下一次作业做准备。
&lt;p&gt;项目背景：小说 APP&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day03&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day03&#34;&gt;#&lt;/a&gt; day03：&lt;/h3&gt;
&lt;h4 id=&#34;1小说列表首页&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1小说列表首页&#34;&gt;#&lt;/a&gt; 1. 小说列表首页&lt;/h4&gt;
&lt;h5 id=&#34;11-新建个springboot项目项目名称名字_book&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11-新建个springboot项目项目名称名字_book&#34;&gt;#&lt;/a&gt; 1.1 新建个 SpringBoot 项目，** 项目名称：** 名字_book&lt;/h5&gt;
&lt;h5 id=&#34;12-找上周选择的app搭档根据他的首页页面进行需求分析设计实体和restful-api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12-找上周选择的app搭档根据他的首页页面进行需求分析设计实体和restful-api&#34;&gt;#&lt;/a&gt; 1.2 找上周选择的 App 搭档，根据他的首页页面进行需求分析，设计实体和 Restful Api.&lt;/h5&gt;
&lt;p&gt;实体一般包括&lt;strong&gt;书籍&lt;/strong&gt; &lt;code&gt;Book&lt;/code&gt;  和&lt;strong&gt;分类&lt;/strong&gt; &lt;code&gt;Category&lt;/code&gt; ，具体实体设计需要根据页面分析。【&lt;strong&gt;note: 分类实体能写出无限级的加分&lt;/strong&gt;】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1JFQURNRS5tZA==&#34;&gt;README.md&lt;/span&gt;&lt;/strong&gt; 需要贴 APP 组员首页截图和 Postman 请求首页 API 结果的截图。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：需写增删查改方法，数据通过 postman 模拟添加。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;2thymeleaf使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2thymeleaf使用&#34;&gt;#&lt;/a&gt; 2.Thymeleaf 使用&lt;/h4&gt;
&lt;h5 id=&#34;21-新建springboot项目项目名称-名字_day03&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#21-新建springboot项目项目名称-名字_day03&#34;&gt;#&lt;/a&gt; 2.1 新建 SpringBoot 项目，项目名称： 名字_day03&lt;/h5&gt;
&lt;h5 id=&#34;22-阅读thymeleaf教程把练习代码提交到day03项目中&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#22-阅读thymeleaf教程把练习代码提交到day03项目中&#34;&gt;#&lt;/a&gt; 2.2 阅读 Thymeleaf 教程，把练习代码提交到 day03 项目中&lt;/h5&gt;
&lt;p&gt;Thymeleaf 教程链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMDMwODk0Nzc=&#34;&gt;https://zhuanlan.zhihu.com/p/103089477&lt;/span&gt;&lt;/p&gt;
&lt;h5 id=&#34;23-thymeleaf实战&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#23-thymeleaf实战&#34;&gt;#&lt;/a&gt; 2.3 Thymeleaf 实战&lt;/h5&gt;
&lt;p&gt;在小说项目 &lt;code&gt;名字_book&lt;/code&gt;  编写后台 HTML 页面，使用 Thymeleaf 模板引擎，对接小说项目中的&lt;strong&gt;书籍&lt;/strong&gt; &lt;code&gt;Book&lt;/code&gt;  和&lt;strong&gt;分类&lt;/strong&gt; &lt;code&gt;Category&lt;/code&gt;  的&lt;strong&gt;增删查改 Restful API&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;增删查改 Restful API 有如下几个功能：&lt;/p&gt;
&lt;p&gt;书籍：&lt;/p&gt;
&lt;p&gt;1. 查询书籍，&lt;strong&gt;要求分页&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2. 添加书籍&lt;/p&gt;
&lt;p&gt;3. 修改书籍&lt;/p&gt;
&lt;p&gt;4. 删除书籍&lt;/p&gt;
&lt;p&gt;分类：&lt;/p&gt;
&lt;p&gt;1. 查询分类&lt;/p&gt;
&lt;p&gt;2. 添加分类&lt;/p&gt;
&lt;p&gt;3. 修改分类&lt;/p&gt;
&lt;p&gt;4. 删除分类&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;代码提交到小说项目 &lt;code&gt;名字_book&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【note】1. 可以使用 Bootstrap4 进行页面布局 &lt;code&gt;https://getbootstrap.net/&lt;/code&gt; ；2. 也可以使用后台模板，只要能做出效果；3. 但也可以你纯用 HTML+CSS 手撸一个后台页面；【推荐】第一和第二种结合起来用&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day04&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day04&#34;&gt;#&lt;/a&gt; day04：&lt;/h3&gt;
&lt;h4 id=&#34;1对接小说app首页&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1对接小说app首页&#34;&gt;#&lt;/a&gt; 1. 对接小说 APP 首页&lt;/h4&gt;
&lt;p&gt;跟自己 APP 组员对接小说 APP 首页，数据对接成功，提供截图到 README.md 文件中&lt;/p&gt;
&lt;h4 id=&#34;2参数-表单检验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2参数-表单检验&#34;&gt;#&lt;/a&gt; 2. 参数、表单检验&lt;/h4&gt;
&lt;p&gt;对书籍实体和分类实体数据进行检验&lt;/p&gt;
&lt;p&gt;1. 所有属性不能为空&lt;/p&gt;
&lt;p&gt;2.&lt;strong&gt; 书名&lt;/strong&gt;长度在 1~20 个字符&lt;/p&gt;
&lt;h4 id=&#34;3自定义异常全局异常捕获&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3自定义异常全局异常捕获&#34;&gt;#&lt;/a&gt; 3. 自定义异常，全局异常捕获&lt;/h4&gt;
&lt;p&gt;自定义一个异常 &lt;code&gt;ServiceException&lt;/code&gt; ，全局异常捕获这个&lt;strong&gt;自定义异常&lt;/strong&gt;和&lt;strong&gt;表单检验异常&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;教程：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMDY0MjEwMD91dG1fc291cmNlPXRhZy1uZXdlc3Q=&#34;&gt;https://segmentfault.com/a/1190000020642100?utm_source=tag-newest&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day05&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day05&#34;&gt;#&lt;/a&gt; day05：&lt;/h3&gt;
&lt;h4 id=&#34;1新建用户实体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1新建用户实体&#34;&gt;#&lt;/a&gt; 1. 新建用户实体&lt;/h4&gt;
&lt;p&gt;实体自己设计&lt;/p&gt;
&lt;h4 id=&#34;2注册用户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2注册用户&#34;&gt;#&lt;/a&gt; 2. 注册用户&lt;/h4&gt;
&lt;p&gt;必须包含：用户名 + 密码 + 确认密码&lt;/p&gt;
&lt;p&gt;其他可以根据自己加.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：密码需要使用 Bcrypt 加密.&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;3邮箱注册&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3邮箱注册&#34;&gt;#&lt;/a&gt; 3. 邮箱注册&lt;/h4&gt;
&lt;p&gt;邮箱注册需要发一封邮件到该用户的邮箱中，只有该用户点击该邮件进行验证，该用户才可以验证成功。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;../../../springboot%E7%BB%83%E4%B9%A0%E4%BB%BB%E5%8A%A1/assets/image-20200928094416423.png&#34; alt=&#34;image-20200928094416423&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;4手机号注册&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4手机号注册&#34;&gt;#&lt;/a&gt; 4. 手机号注册&lt;/h4&gt;
&lt;p&gt;用户填写完手机号，发送验证码，&lt;strong&gt;验证码需要有个 15 分钟有效期。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day06&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day06&#34;&gt;#&lt;/a&gt; day06：&lt;/h3&gt;
&lt;h4 id=&#34;1批量导入书籍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1批量导入书籍&#34;&gt;#&lt;/a&gt; 1. 批量导入书籍&lt;/h4&gt;
&lt;p&gt;复制出来之前的小说项目，更名为：姓名_day06&lt;/p&gt;
&lt;p&gt;在页面上，加一个批量导入按钮，点击可以上传 excel 表格，进行批量导入。&lt;/p&gt;
&lt;p&gt;note：封面图片 url 可以默认在 excel 中写死&lt;/p&gt;
&lt;p&gt;导入格式：书籍名称、介绍、作者、分类名称&lt;/p&gt;
&lt;h4 id=&#34;2批量导出所有书籍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2批量导出所有书籍&#34;&gt;#&lt;/a&gt; 2. 批量导出所有书籍&lt;/h4&gt;
&lt;p&gt;导出 excel 名称格式为： &lt;strong&gt;当前日期_书籍信息.xlsx&lt;/strong&gt;     2020-10-09_书籍信息.xlsx&lt;/p&gt;
&lt;p&gt;列名需包括：书籍名称、介绍、作者、分类名称、创建时间&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day07&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day07&#34;&gt;#&lt;/a&gt; day07：&lt;/h3&gt;
&lt;h4 id=&#34;目标学会使用swagger2生成文档&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目标学会使用swagger2生成文档&#34;&gt;#&lt;/a&gt; 目标：学会使用 swagger2 生成文档&lt;/h4&gt;
&lt;p&gt;介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在日常的工作中，我们往往需要给前端（WEB 端、IOS、Android）或者第三方提供接口，这个时候我们就需要给他们提供一份详细的 API 说明文档。但维护一份详细的文档可不是一件简单的事情。首先，编写一份详细的文档本身就是一件很费时费力的事情，另一方面，由于代码和文档是分离的，所以很容易导致文档和代码的不一致。这篇文章我们就来分享一种 API 文档维护的方式，即通过 Swagger 来自动生成 Restuful API 文档。&lt;/p&gt;
&lt;p&gt;那什么是 Swagger？我们可以直接看下官方的描述：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;THE WORLD&#39;S MOST POPULAR API TOOLING``Swagger is the world’s largest framework of API developer tools ``for` `the OpenAPI Specification(OAS),``enabling development across the entire API lifecycle, from design and documentation, to test and deployment.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这段话首先告诉大家 Swagger 是世界上最流行的 API 工具，并且 Swagger 的目的是支撑整个 API 生命周期的开发，包括设计、文档以及测试和部署。这篇文章中我们会用到 Swagger 的文档管理和测试功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;任务：给各个接口生成文档，包含接口说明、方法说明、参数说明、例子&lt;/p&gt;
&lt;p&gt;使用&lt;strong&gt; Swagger2&lt;/strong&gt; 对书籍进行&lt;strong&gt;增删改查&lt;/strong&gt;测试，贴测试结果的截图到 readme.md 文档中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以使用 &lt;code&gt;swagger-bootstrap-ui&lt;/code&gt;  对文档进行换肤&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueGlhb21pbmZvLmNvbS8yMDE4LzA4LzI5L3N3YWdnZXItYm9vdHN0cmFwLXVpLWRlc2NyaXB0aW9uLw==&#34;&gt;https://www.xiaominfo.com/2018/08/29/swagger-bootstrap-ui-description/&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day08&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day08&#34;&gt;#&lt;/a&gt; day08：&lt;/h3&gt;
&lt;h4 id=&#34;1spring-aop使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1spring-aop使用&#34;&gt;#&lt;/a&gt; 1.Spring AOP 使用&lt;/h4&gt;
&lt;p&gt;了解以下注解的使用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;@Aspect&lt;/strong&gt;：声明该类为一个注解类；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@Pointcut&lt;/strong&gt;：定义一个切点，后面跟随一个表达式，表达式可以定义为切某个注解，也可以切某个 package 下的方法；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;切点定义好后，就是围绕这个切点做文章了；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;@Before&lt;/strong&gt;: 在切点之前，织入相关代码；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@After&lt;/strong&gt;: 在切点之后，织入相关代码；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@AfterReturning&lt;/strong&gt;: 在切点返回内容后，织入相关代码，一般用于对返回值做些加工处理的场景；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@AfterThrowing&lt;/strong&gt;: 用来处理当织入的代码抛出异常后的逻辑处理；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;@Around&lt;/strong&gt;: 环绕，可以在切入点前后织入代码，并且可以自由的控制何时执行切点；&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5CAdmin%5CDocuments%5C%E6%9E%81%E5%AE%A2%E4%BD%9C%E4%B8%9A%E5%B8%83%E7%BD%AE%5Cassets%5Cimage-20210426152243000.png&#34; alt=&#34;image-20210426152243000&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;练习任务：使用 Spring AOP 计算所有 Service 业务类的程序执行时间。【注意：使用 log 日志形式打印到控制台】&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;程序控制头打印如下，需截图到 README.md 中。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;INFO  ServiceLogAspect:43 - ====== 开始执行 class com.geek.service.impl.CategoryServiceImpl.xxxx======&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;INFO  ServiceLogAspect:62 - ====== 执行结束，耗时：248 毫秒 ======&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day09&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day09&#34;&gt;#&lt;/a&gt; day09：&lt;/h3&gt;
&lt;h4 id=&#34;1springboot-自定义注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1springboot-自定义注解&#34;&gt;#&lt;/a&gt; 1.SpringBoot 自定义注解&lt;/h4&gt;
&lt;h5 id=&#34;11-了解如下几个java元注解把每个元注解的意思写道readmemd笔记中&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#11-了解如下几个java元注解把每个元注解的意思写道readmemd笔记中&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.1 了解如下几个 Java 元注解&lt;/strong&gt;，把每个元注解的意思写道 README.md 笔记中。&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;@Retention&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Retention (保留) 注解说明，这种类型的注解会被保留到那个阶段。有三个值:&lt;br&gt;
1.RetentionPolicy.SOURCE —— 这种类型的 Annotations 只在源代码级别保留，编译时就会被忽略&lt;br&gt;
 2.RetentionPolicy.CLASS —— 这种类型的 Annotations 编译时被保留，在 class 文件中存在，但 JVM 将会忽略&lt;br&gt;
 3.RetentionPolicy.RUNTIME —— 这种类型的 Annotations 将被 JVM 保留，所以他们能在运行时被 JVM 或其他使用反射机制的代码所读取和使用.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;@Target&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;@Document&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Documented 注解表明这个注解应该被 javadoc 工具记录。默认情况下，javadoc 是不包括注解的。但如果声明注解时指定了 @Documented, 则它会被 javadoc 之类的工具处理，所以注解类型信息也会被包括在生成的文档中。示例 6 进一步演示了使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;@Inherited&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;12-自定义检验注解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#12-自定义检验注解&#34;&gt;#&lt;/a&gt; 1.2 自定义检验注解&lt;/h5&gt;
&lt;p&gt;复制上次的注册项目，更名为：名字_day09&lt;/p&gt;
&lt;p&gt;在使用&lt;strong&gt;密码 + 确认密码&lt;/strong&gt;注册的时候，我们需要检验密码和确认密码是否一致，这里我们需要自己定义&lt;strong&gt;确认密码&lt;/strong&gt;检验注解，来进行检验。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【注意】确认密码注解名称统一定义叫：ConfirmPassword 注解类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【注意】可以参考官方检验注解源码，结构一样，主要逻辑不一样而已。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最后使用 PostMan 测试检验的结果，把成功和失败的请求截图到 README.md 笔记中&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day10&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day10&#34;&gt;#&lt;/a&gt; day10：&lt;/h3&gt;
&lt;p&gt;阅读如下这篇文章，把文章案例里的代码都要敲一遍，最后一起提交到仓库。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMDE5Mjg3OA==&#34;&gt;https://segmentfault.com/a/1190000020192878&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;任务：使用定时任务完成：&lt;strong&gt;定时数据库备份&lt;/strong&gt;，备份每个月的 1 号凌晨 00: 00 点的数据库，要求兼容&lt;strong&gt; Window 和 Linux&lt;/strong&gt; 双系统，把结果截图到 README.md 文件中。&lt;/p&gt;
&lt;p&gt;自己搭建 Linux 环境，镜像使用 Centos7，详细安装见下面这篇博客&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pvdWh1dS9hcnRpY2xlL2RldGFpbHMvODY1MzA3ODc=&#34;&gt;https://blog.csdn.net/zouhuu/article/details/86530787&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day11&#34;&gt;#&lt;/a&gt; day11：&lt;/h3&gt;
&lt;h4 id=&#34;rabbitmq使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rabbitmq使用&#34;&gt;#&lt;/a&gt; RabbitMq 使用&lt;/h4&gt;
&lt;p&gt;阅读博客文章：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAxOS8xMS8yOC9SYWJiaXRNcSVFNiU4QyU4NyVFNSU4RCU5Ny8=&#34;&gt;http://zzm.yunep.com/2019/11/28/RabbitMq 指南 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要求：把博客里的练习代码都要敲一遍，并要求做学习笔记，后面提交到 git 仓库。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;rabbitmq发送短信验证码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rabbitmq发送短信验证码&#34;&gt;#&lt;/a&gt; RabbitMQ 发送短信验证码&lt;/h4&gt;
&lt;p&gt;将之前的短信服务抽离为一个独立工程，工程名称：&lt;strong&gt;姓名_day11_sms&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将&lt;strong&gt; Day05 代码&lt;/strong&gt;复制出来，更名为：&lt;strong&gt;姓名_day11_producer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当手机号注册，发送验证码的时候，需要向 Rabbitmq 发送消息，短信服务接收到消息，进行消费。&lt;/p&gt;
&lt;p&gt;发送短信服务工程为消费者，&lt;strong&gt;姓名_day11_producer&lt;/strong&gt; 为生产者&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将测试的结果截图到 README.md 中。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day12&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day12&#34;&gt;#&lt;/a&gt; day12：&lt;/h3&gt;
&lt;h4 id=&#34;此次学习目标springbootrabbitmq-做智能家居&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#此次学习目标springbootrabbitmq-做智能家居&#34;&gt;#&lt;/a&gt; 此次学习目标：SpringBoot+RabbitMQ 做智能家居&lt;/h4&gt;
&lt;p&gt;阅读博客文章：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAyMC8xMC8xNC9TcHJpbmdCb290LVJhYmJpdE1RLSVFNSU4MSU5QSVFNiU5OSVCQSVFOCU4MyVCRCVFNSVBRSVCNiVFNSVCMSU4NS8=&#34;&gt;http://zzm.yunep.com/2020/10/14/SpringBoot-RabbitMQ - 做智能家居 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;创建 SpringBoot 项目：工程名称：名字_day12&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要求：实现文章里的案例功能，并要求写 README.md 学习笔记。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day13&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day13&#34;&gt;#&lt;/a&gt; day13：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;学习目标：Redis 使用&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;1安装redis并了解redis命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1安装redis并了解redis命令&#34;&gt;#&lt;/a&gt; 1. 安装 Redis 并了解 Redis 命令&lt;/h4&gt;
&lt;h4 id=&#34;2了解redis的五种数据类型需要做笔记&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2了解redis的五种数据类型需要做笔记&#34;&gt;#&lt;/a&gt; 2. 了解 Redis 的五种数据类型，需要做笔记！&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;String&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hash&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;list&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;set&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;zset&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;3springboot整合redis并实现手机验证码注册和验证码过期&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3springboot整合redis并实现手机验证码注册和验证码过期&#34;&gt;#&lt;/a&gt; 3.springboot 整合 redis，并实现手机验证码注册和验证码过期&lt;/h4&gt;
&lt;p&gt;博客文章：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC85NzM5NDkzMg==&#34;&gt;https://zhuanlan.zhihu.com/p/97394932&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;在短信服务工程中引入 redis，发送短信时：键：手机号码 +&amp;quot;_register&amp;quot; 值：短信验证码&lt;/p&gt;
&lt;p&gt;采用 redis 方式将短信验证码放入 redis 缓存中，如果&lt;strong&gt;验证码 60 秒内未过期&lt;/strong&gt; 且 &lt;strong&gt;验证码匹配通过&lt;/strong&gt;，则执行注册逻辑，完成注册。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day14&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day14&#34;&gt;#&lt;/a&gt; day14：&lt;/h3&gt;
&lt;p&gt;简单使用 SpringSecurity【老懒狗可忽略】&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDc2NjIxNC9hcnRpY2xlL2RldGFpbHMvMTA3MTA3NjM2&#34;&gt;https://blog.csdn.net/weixin_44766214/article/details/107107636&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习目标：Oauth2 使用入门&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAxOS8xMi8xMy9PYXV0aDIlRTQlQkQlQkYlRTclOTQlQTglRTUlODUlQTUlRTklOTclQTgv&#34;&gt;http://zzm.yunep.com/2019/12/13/Oauth2 使用入门 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;仓库名称：名字_day14&lt;/p&gt;
&lt;p&gt;根据博客代码搭建 Oauth2 登录认证，把代码提交到仓库，并把演示图和重要代码放到 README.md 文件中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day15&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day15&#34;&gt;#&lt;/a&gt; day15：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;学习目标：Oauth2 结合 JWT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qd3QuaW8v&#34;&gt;https://jwt.io/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAxOS8xMi8xMi9PYXV0aDIlRTclQkIlOTMlRTUlOTAlODhKV1Qv&#34;&gt;http://zzm.yunep.com/2019/12/12/Oauth2 结合 JWT/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;复制 day14 的项目，仓库名称：名字_day15&lt;/p&gt;
&lt;p&gt;使用 JWT 存储令牌，把博客上的练习代码都试一遍，并把演示图和重要代码放到 README.md 文件中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day16&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day16&#34;&gt;#&lt;/a&gt; day16：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;学习目标：Oauth2 实现单点登录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qd3QuaW8v&#34;&gt;https://jwt.io/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAxOS8xMi8yNi9PYXV0aDIlRTUlQUUlOUUlRTclOEUlQjAlRTUlOEQlOTUlRTclODIlQjklRTclOTklQkIlRTUlQkQlOTUv&#34;&gt;http://zzm.yunep.com/2019/12/26/Oauth2 实现单点登录 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;复制 day15 的项目，仓库名称：名字_day16&lt;/p&gt;
&lt;p&gt;把博客上的练习代码都试一遍，并把演示图和重要代码放到 README.md 文件中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day17&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day17&#34;&gt;#&lt;/a&gt; day17：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;学习目标：ElasticSearch 安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9lbGFzdGljc2VhcmNoLw==&#34;&gt;https://www.elastic.co/cn/elasticsearch/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAyMC8xMS8xMy9FbGFzdGljc2VhcmNoLSVFNSU4NSVBNSVFOSU5NyVBOCVFNSVBRSU4OSVFOCVBMyU4NS8=&#34;&gt;http://zzm.yunep.com/2020/11/13/Elasticsearch - 入门安装 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;仓库名称：名字_day17&lt;/p&gt;
&lt;p&gt;把安装流程和安装完成演示图放到 README.md 文件中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day18&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day18&#34;&gt;#&lt;/a&gt; day18：&lt;/h3&gt;
&lt;p&gt;简简单单 Day 系列小任务，主要完成项目开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习目标：ElasticSearch 核心概念和中文分词器配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9lbGFzdGljc2VhcmNoLw==&#34;&gt;https://www.elastic.co/cn/elasticsearch/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;中文分词器官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWsvcmVsZWFzZXMvdGFnL3Y3LjEwLjA=&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.10.0&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS55dW5lcC5jb20vMjAyMC8xMS8xNy9FbGFzdGljU2VhcmNoJUU2JUEwJUI4JUU1JUJGJTgzJUU2JUE2JTgyJUU1JUJGJUI1JUU1JTkyJThDJUU0JUI4JUFEJUU2JTk2JTg3JUU1JTg4JTg2JUU4JUFGJThEJUU1JTk5JUE4Lw==&#34;&gt;http://zzm.yunep.com/2020/11/17/ElasticSearch 核心概念和中文分词器 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;仓库名称：名字_day18&lt;/p&gt;
&lt;p&gt;把完成演示图放到 README.md 文件中。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;day19&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day19&#34;&gt;#&lt;/a&gt; day19：&lt;/h3&gt;
&lt;p&gt;简简单单 Day 系列小任务，主要完成项目开发。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;学习目标：ElasticSearch 索引操作&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9lbGFzdGljc2VhcmNoLw==&#34;&gt;https://www.elastic.co/cn/elasticsearch/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;阅读博客：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3p6bS5sd2Vpc2hpLmNvbS8yMDIwLzExLzE3L0VsYXN0aWNTZWFyY2gtJUU3JUI0JUEyJUU1JUJDJTk1JUU1JTlGJUJBJUU2JTlDJUFDJUU2JTkzJThEJUU0JUJEJTlDLw==&#34;&gt;http://zzm.lweishi.com/2020/11/17/ElasticSearch - 索引基本操作 /&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;仓库名称：名字_day19&lt;/p&gt;
&lt;p&gt;把完成演示图放到 README.md 文件中。&lt;/p&gt;
</content>
        <category term="Springboot" />
        <updated>2021-04-10T00:39:18.000Z</updated>
    </entry>
</feed>
